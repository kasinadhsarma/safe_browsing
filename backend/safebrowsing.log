2025-01-25 00:10:10,165 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:10,312 - WARNING - URL model not loaded
2025-01-25 00:10:10,312 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:10,314 - WARNING - URL model not loaded
2025-01-25 00:10:10,315 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:10,317 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:10,320 - WARNING - URL model not loaded
2025-01-25 00:10:10,321 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:11,089 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:11,144 - WARNING - URL model not loaded
2025-01-25 00:10:11,147 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:11,163 - WARNING - URL model not loaded
2025-01-25 00:10:11,163 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:11,259 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:11,278 - WARNING - URL model not loaded
2025-01-25 00:10:11,281 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:18,107 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:35,412 - WARNING - URL model not loaded
2025-01-25 00:10:35,413 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:38,267 - WARNING - URL model not loaded
2025-01-25 00:10:38,268 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:43,883 - WARNING - URL model not loaded
2025-01-25 00:10:43,883 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:53,392 - WARNING - URL model not loaded
2025-01-25 00:10:53,393 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:57,131 - WARNING - URL model not loaded
2025-01-25 00:10:57,131 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:58,099 - WARNING - URL model not loaded
2025-01-25 00:10:58,099 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:10:59,687 - WARNING - URL model not loaded
2025-01-25 00:10:59,687 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:11:36,435 - WARNING - URL model not loaded
2025-01-25 00:11:36,435 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:11:54,048 - WARNING - URL model not loaded
2025-01-25 00:11:54,048 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:11:56,009 - WARNING - URL model not loaded
2025-01-25 00:11:56,009 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:11:57,014 - WARNING - URL model not loaded
2025-01-25 00:11:57,015 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:06,839 - WARNING - URL model not loaded
2025-01-25 00:12:06,839 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:13,767 - WARNING - URL model not loaded
2025-01-25 00:12:13,767 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:16,986 - WARNING - URL model not loaded
2025-01-25 00:12:16,986 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:17,940 - WARNING - URL model not loaded
2025-01-25 00:12:17,940 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:28,543 - WARNING - URL model not loaded
2025-01-25 00:12:28,544 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:38,114 - WARNING - URL model not loaded
2025-01-25 00:12:38,114 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:44,363 - WARNING - URL model not loaded
2025-01-25 00:12:44,363 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:46,415 - WARNING - URL model not loaded
2025-01-25 00:12:46,415 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:47,401 - WARNING - URL model not loaded
2025-01-25 00:12:47,401 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:49,904 - WARNING - URL model not loaded
2025-01-25 00:12:49,904 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:53,550 - WARNING - URL model not loaded
2025-01-25 00:12:53,550 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:54,521 - WARNING - URL model not loaded
2025-01-25 00:12:54,522 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:12:58,545 - WARNING - URL model not loaded
2025-01-25 00:12:58,545 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:14:25,085 - WARNING - URL model not loaded
2025-01-25 00:14:25,086 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:15:16,895 - WARNING - URL model not loaded
2025-01-25 00:15:16,896 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:20:51,850 - WARNING - URL model not loaded
2025-01-25 00:20:51,850 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:20:52,853 - WARNING - URL model not loaded
2025-01-25 00:20:52,854 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:20:56,077 - WARNING - URL model not loaded
2025-01-25 00:20:56,077 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:21:09,537 - WARNING - URL model not loaded
2025-01-25 00:21:09,537 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:21:16,371 - WARNING - URL model not loaded
2025-01-25 00:21:16,372 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:21:25,999 - WARNING - URL model not loaded
2025-01-25 00:21:26,000 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:21:28,533 - WARNING - URL model not loaded
2025-01-25 00:21:28,533 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:21:29,531 - WARNING - URL model not loaded
2025-01-25 00:21:29,532 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:21:35,525 - WARNING - URL model not loaded
2025-01-25 00:21:35,526 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:21:39,643 - WARNING - URL model not loaded
2025-01-25 00:21:39,643 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:22:05,062 - WARNING - URL model not loaded
2025-01-25 00:22:05,062 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:22:07,883 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:22:08,848 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:22:10,429 - WARNING - URL model not loaded
2025-01-25 00:22:10,429 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:22:11,445 - WARNING - URL model not loaded
2025-01-25 00:22:11,445 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:22:20,757 - WARNING - URL model not loaded
2025-01-25 00:22:20,757 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:22:21,723 - WARNING - URL model not loaded
2025-01-25 00:22:21,723 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 00:22:25,540 - WARNING - URL model not loaded
2025-01-25 00:22:25,540 - ERROR - Error checking URL: log_activity() takes 1 positional argument but 2 were given
2025-01-25 01:14:39,016 - WARNING - URL model not loaded
2025-01-25 01:14:39,020 - ERROR - Error logging activity: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('59924db943bc95f510b9d5424bfcc95b', 'https://web.whatsapp.com/', '2025-01-24 19:44:39.017388', 'checking', 'General', 'Unknown', 'null')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 01:14:39,021 - ERROR - Error checking URL: 
2025-01-25 01:17:25,792 - ERROR - Error logging activity: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('84123f634ce390369f578ea4084ead26', 'https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcloud-platform+https%3A%2F%2Fwww.goo ... (287 characters truncated) ... v3hmdib135j.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Flocalhost%3A36929%2Foauth2redirect&service=lso&o2v=2&ddm=1&flowName=GeneralOAuthFlow', '2025-01-24 19:47:25.790977', 'checking', 'Safe', 'Low', 'null')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 01:17:25,792 - ERROR - Error checking URL: 
2025-01-25 01:17:34,152 - ERROR - Error logging activity: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('6c639e92725f308906f2f21071d05a81', 'https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcloud-platform+https%3A%2F%2Fwww.goo ... (287 characters truncated) ... v3hmdib135j.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Flocalhost%3A36929%2Foauth2redirect&service=lso&o2v=2&ddm=1&flowName=GeneralOAuthFlow', '2025-01-24 19:47:34.151077', 'checking', 'Safe', 'Low', 'null')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 01:17:34,153 - ERROR - Error checking URL: 
2025-01-25 01:17:49,871 - WARNING - URL model not loaded
2025-01-25 01:17:49,872 - ERROR - Error logging activity: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('c0147aa80b30d0303269f04d0517f66c', 'https://www.linkedin.com/in/', '2025-01-24 19:47:49.871967', 'checking', 'General', 'Unknown', 'null')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 01:17:49,872 - ERROR - Error checking URL: 
2025-01-25 01:20:14,123 - ERROR - Error logging activity: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('be968589fc26f0ba6b252270250e7000', 'https://www.google.com/search?q=cline&oq=cline&gs_lcrp=EgZjaHJvbWUqDggAEEUYJxg7GIAEGIoFMg4IABBFGCcYOxiABBiKBTIYCAEQLhhDGIMBGMcBGLEDGNEDGIAEGIoFMgwIAhAAGEMYgAQYigUyDAgDEAAYQxiABBiKBTIMCAQQABhDGIAEGIoFMgYIBRBFGDwyBggGEEUYPDIGCAcQRRg80gEINTE1NmowajeoAgiwAgE&sourceid=chrome&ie=UTF-8', '2025-01-24 19:50:14.122598', 'checking', 'Safe', 'Low', 'null')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 01:20:14,124 - ERROR - Error checking URL: 
2025-01-25 01:20:17,587 - ERROR - Error logging activity: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('32509ff13ee06b272efc3af7e9eab785', 'https://github.com/cline/cline', '2025-01-24 19:50:17.586838', 'checking', 'Safe', 'Low', 'null')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 01:20:17,587 - ERROR - Error checking URL: 
2025-01-25 03:43:07,364 - WARNING - URL model not loaded
2025-01-25 03:43:07,365 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:43:07,365 - ERROR - Error checking URL: 
2025-01-25 03:43:13,016 - WARNING - URL model not loaded
2025-01-25 03:43:13,016 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:43:13,017 - ERROR - Error checking URL: 
2025-01-25 03:44:12,970 - WARNING - URL model not loaded
2025-01-25 03:44:12,971 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:12,971 - ERROR - Error checking URL: 
2025-01-25 03:44:23,536 - WARNING - URL model not loaded
2025-01-25 03:44:23,537 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:23,537 - ERROR - Error checking URL: 
2025-01-25 03:44:24,471 - WARNING - URL model not loaded
2025-01-25 03:44:24,471 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:24,472 - ERROR - Error checking URL: 
2025-01-25 03:44:25,375 - WARNING - URL model not loaded
2025-01-25 03:44:25,376 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:25,376 - ERROR - Error checking URL: 
2025-01-25 03:44:26,430 - WARNING - URL model not loaded
2025-01-25 03:44:26,430 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:26,431 - ERROR - Error checking URL: 
2025-01-25 03:44:27,328 - WARNING - URL model not loaded
2025-01-25 03:44:27,328 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:27,329 - ERROR - Error checking URL: 
2025-01-25 03:44:28,217 - WARNING - URL model not loaded
2025-01-25 03:44:28,218 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:28,218 - ERROR - Error checking URL: 
2025-01-25 03:44:29,202 - WARNING - URL model not loaded
2025-01-25 03:44:29,202 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:29,202 - ERROR - Error checking URL: 
2025-01-25 03:44:30,091 - WARNING - URL model not loaded
2025-01-25 03:44:30,092 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:30,092 - ERROR - Error checking URL: 
2025-01-25 03:44:31,036 - WARNING - URL model not loaded
2025-01-25 03:44:31,036 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:31,036 - ERROR - Error checking URL: 
2025-01-25 03:44:31,871 - WARNING - URL model not loaded
2025-01-25 03:44:31,871 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:31,872 - ERROR - Error checking URL: 
2025-01-25 03:44:32,673 - WARNING - URL model not loaded
2025-01-25 03:44:32,673 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:32,674 - ERROR - Error checking URL: 
2025-01-25 03:44:33,484 - WARNING - URL model not loaded
2025-01-25 03:44:33,484 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:33,484 - ERROR - Error checking URL: 
2025-01-25 03:44:34,278 - WARNING - URL model not loaded
2025-01-25 03:44:34,278 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:34,278 - ERROR - Error checking URL: 
2025-01-25 03:44:35,111 - WARNING - URL model not loaded
2025-01-25 03:44:35,112 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:35,112 - ERROR - Error checking URL: 
2025-01-25 03:44:35,908 - WARNING - URL model not loaded
2025-01-25 03:44:35,908 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:35,908 - ERROR - Error checking URL: 
2025-01-25 03:44:36,714 - WARNING - URL model not loaded
2025-01-25 03:44:36,715 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:36,715 - ERROR - Error checking URL: 
2025-01-25 03:44:37,747 - WARNING - URL model not loaded
2025-01-25 03:44:37,747 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:37,748 - ERROR - Error checking URL: 
2025-01-25 03:44:38,554 - WARNING - URL model not loaded
2025-01-25 03:44:38,555 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:38,555 - ERROR - Error checking URL: 
2025-01-25 03:44:39,429 - WARNING - URL model not loaded
2025-01-25 03:44:39,430 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:39,430 - ERROR - Error checking URL: 
2025-01-25 03:44:40,309 - WARNING - URL model not loaded
2025-01-25 03:44:40,310 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:40,310 - ERROR - Error checking URL: 
2025-01-25 03:44:41,195 - WARNING - URL model not loaded
2025-01-25 03:44:41,195 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:41,196 - ERROR - Error checking URL: 
2025-01-25 03:44:42,043 - WARNING - URL model not loaded
2025-01-25 03:44:42,044 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:42,044 - ERROR - Error checking URL: 
2025-01-25 03:44:42,955 - WARNING - URL model not loaded
2025-01-25 03:44:42,955 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:42,955 - ERROR - Error checking URL: 
2025-01-25 03:44:43,757 - WARNING - URL model not loaded
2025-01-25 03:44:43,757 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:43,758 - ERROR - Error checking URL: 
2025-01-25 03:44:44,560 - WARNING - URL model not loaded
2025-01-25 03:44:44,561 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:44,561 - ERROR - Error checking URL: 
2025-01-25 03:44:45,390 - WARNING - URL model not loaded
2025-01-25 03:44:45,390 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:45,391 - ERROR - Error checking URL: 
2025-01-25 03:44:46,229 - WARNING - URL model not loaded
2025-01-25 03:44:46,229 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:46,229 - ERROR - Error checking URL: 
2025-01-25 03:44:47,049 - WARNING - URL model not loaded
2025-01-25 03:44:47,050 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:47,050 - ERROR - Error checking URL: 
2025-01-25 03:44:47,940 - WARNING - URL model not loaded
2025-01-25 03:44:47,940 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:47,940 - ERROR - Error checking URL: 
2025-01-25 03:44:48,810 - WARNING - URL model not loaded
2025-01-25 03:44:48,810 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:48,810 - ERROR - Error checking URL: 
2025-01-25 03:44:49,718 - WARNING - URL model not loaded
2025-01-25 03:44:49,719 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:49,719 - ERROR - Error checking URL: 
2025-01-25 03:44:50,640 - WARNING - URL model not loaded
2025-01-25 03:44:50,640 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:50,641 - ERROR - Error checking URL: 
2025-01-25 03:44:51,564 - WARNING - URL model not loaded
2025-01-25 03:44:51,564 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:51,564 - ERROR - Error checking URL: 
2025-01-25 03:44:52,389 - WARNING - URL model not loaded
2025-01-25 03:44:52,389 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:52,389 - ERROR - Error checking URL: 
2025-01-25 03:44:53,189 - WARNING - URL model not loaded
2025-01-25 03:44:53,189 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:53,190 - ERROR - Error checking URL: 
2025-01-25 03:44:54,303 - WARNING - URL model not loaded
2025-01-25 03:44:54,303 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:54,303 - ERROR - Error checking URL: 
2025-01-25 03:44:55,128 - WARNING - URL model not loaded
2025-01-25 03:44:55,128 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:55,128 - ERROR - Error checking URL: 
2025-01-25 03:44:55,941 - WARNING - URL model not loaded
2025-01-25 03:44:55,941 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:55,942 - ERROR - Error checking URL: 
2025-01-25 03:44:56,748 - WARNING - URL model not loaded
2025-01-25 03:44:56,749 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:56,749 - ERROR - Error checking URL: 
2025-01-25 03:44:57,529 - WARNING - URL model not loaded
2025-01-25 03:44:57,529 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:57,530 - ERROR - Error checking URL: 
2025-01-25 03:44:58,438 - WARNING - URL model not loaded
2025-01-25 03:44:58,439 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:58,439 - ERROR - Error checking URL: 
2025-01-25 03:44:59,254 - WARNING - URL model not loaded
2025-01-25 03:44:59,254 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:44:59,255 - ERROR - Error checking URL: 
2025-01-25 03:45:00,148 - WARNING - URL model not loaded
2025-01-25 03:45:00,149 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:00,149 - ERROR - Error checking URL: 
2025-01-25 03:45:01,044 - WARNING - URL model not loaded
2025-01-25 03:45:01,045 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:01,045 - ERROR - Error checking URL: 
2025-01-25 03:45:01,946 - WARNING - URL model not loaded
2025-01-25 03:45:01,946 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:01,946 - ERROR - Error checking URL: 
2025-01-25 03:45:02,793 - WARNING - URL model not loaded
2025-01-25 03:45:02,793 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:02,793 - ERROR - Error checking URL: 
2025-01-25 03:45:03,667 - WARNING - URL model not loaded
2025-01-25 03:45:03,668 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:03,668 - ERROR - Error checking URL: 
2025-01-25 03:45:04,514 - WARNING - URL model not loaded
2025-01-25 03:45:04,514 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:04,514 - ERROR - Error checking URL: 
2025-01-25 03:45:05,369 - WARNING - URL model not loaded
2025-01-25 03:45:05,369 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:05,370 - ERROR - Error checking URL: 
2025-01-25 03:45:06,214 - WARNING - URL model not loaded
2025-01-25 03:45:06,214 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:06,215 - ERROR - Error checking URL: 
2025-01-25 03:45:07,052 - WARNING - URL model not loaded
2025-01-25 03:45:07,052 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:07,053 - ERROR - Error checking URL: 
2025-01-25 03:45:07,888 - WARNING - URL model not loaded
2025-01-25 03:45:07,888 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:07,889 - ERROR - Error checking URL: 
2025-01-25 03:45:08,351 - WARNING - URL model not loaded
2025-01-25 03:45:08,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:08,352 - ERROR - Error checking URL: 
2025-01-25 03:45:09,194 - WARNING - URL model not loaded
2025-01-25 03:45:09,195 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:09,195 - ERROR - Error checking URL: 
2025-01-25 03:45:10,019 - WARNING - URL model not loaded
2025-01-25 03:45:10,020 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:10,020 - ERROR - Error checking URL: 
2025-01-25 03:45:10,869 - WARNING - URL model not loaded
2025-01-25 03:45:10,870 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:10,870 - ERROR - Error checking URL: 
2025-01-25 03:45:11,701 - WARNING - URL model not loaded
2025-01-25 03:45:11,702 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:11,702 - ERROR - Error checking URL: 
2025-01-25 03:45:12,559 - WARNING - URL model not loaded
2025-01-25 03:45:12,560 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:12,560 - ERROR - Error checking URL: 
2025-01-25 03:45:13,411 - WARNING - URL model not loaded
2025-01-25 03:45:13,411 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:13,412 - ERROR - Error checking URL: 
2025-01-25 03:45:14,239 - WARNING - URL model not loaded
2025-01-25 03:45:14,240 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:14,240 - ERROR - Error checking URL: 
2025-01-25 03:45:15,118 - WARNING - URL model not loaded
2025-01-25 03:45:15,119 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:15,119 - ERROR - Error checking URL: 
2025-01-25 03:45:16,005 - WARNING - URL model not loaded
2025-01-25 03:45:16,006 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:16,006 - ERROR - Error checking URL: 
2025-01-25 03:45:16,855 - WARNING - URL model not loaded
2025-01-25 03:45:16,855 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:16,855 - ERROR - Error checking URL: 
2025-01-25 03:45:17,690 - WARNING - URL model not loaded
2025-01-25 03:45:17,690 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:17,691 - ERROR - Error checking URL: 
2025-01-25 03:45:18,583 - WARNING - URL model not loaded
2025-01-25 03:45:18,584 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:18,584 - ERROR - Error checking URL: 
2025-01-25 03:45:20,352 - WARNING - URL model not loaded
2025-01-25 03:45:20,353 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:20,353 - ERROR - Error checking URL: 
2025-01-25 03:45:21,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:21,350 - ERROR - Error checking URL: 
2025-01-25 03:45:22,349 - WARNING - URL model not loaded
2025-01-25 03:45:22,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:22,351 - ERROR - Error checking URL: 
2025-01-25 03:45:24,366 - WARNING - URL model not loaded
2025-01-25 03:45:24,367 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:24,367 - ERROR - Error checking URL: 
2025-01-25 03:45:25,472 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:25,472 - ERROR - Error checking URL: 
2025-01-25 03:45:26,404 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:26,404 - ERROR - Error checking URL: 
2025-01-25 03:45:28,350 - WARNING - URL model not loaded
2025-01-25 03:45:28,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:28,351 - ERROR - Error checking URL: 
2025-01-25 03:45:30,350 - WARNING - URL model not loaded
2025-01-25 03:45:30,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:30,351 - ERROR - Error checking URL: 
2025-01-25 03:45:32,350 - WARNING - URL model not loaded
2025-01-25 03:45:32,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:32,350 - ERROR - Error checking URL: 
2025-01-25 03:45:34,351 - WARNING - URL model not loaded
2025-01-25 03:45:34,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:34,352 - ERROR - Error checking URL: 
2025-01-25 03:45:36,349 - WARNING - URL model not loaded
2025-01-25 03:45:36,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:36,350 - ERROR - Error checking URL: 
2025-01-25 03:45:38,351 - WARNING - URL model not loaded
2025-01-25 03:45:38,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:38,352 - ERROR - Error checking URL: 
2025-01-25 03:45:40,351 - WARNING - URL model not loaded
2025-01-25 03:45:40,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:40,352 - ERROR - Error checking URL: 
2025-01-25 03:45:42,351 - WARNING - URL model not loaded
2025-01-25 03:45:42,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:42,352 - ERROR - Error checking URL: 
2025-01-25 03:45:44,349 - WARNING - URL model not loaded
2025-01-25 03:45:44,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:44,350 - ERROR - Error checking URL: 
2025-01-25 03:45:46,351 - WARNING - URL model not loaded
2025-01-25 03:45:46,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:46,352 - ERROR - Error checking URL: 
2025-01-25 03:45:48,350 - WARNING - URL model not loaded
2025-01-25 03:45:48,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:48,351 - ERROR - Error checking URL: 
2025-01-25 03:45:50,349 - WARNING - URL model not loaded
2025-01-25 03:45:50,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:50,350 - ERROR - Error checking URL: 
2025-01-25 03:45:52,350 - WARNING - URL model not loaded
2025-01-25 03:45:52,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:52,351 - ERROR - Error checking URL: 
2025-01-25 03:45:54,349 - WARNING - URL model not loaded
2025-01-25 03:45:54,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:54,349 - ERROR - Error checking URL: 
2025-01-25 03:45:56,349 - WARNING - URL model not loaded
2025-01-25 03:45:56,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:56,349 - ERROR - Error checking URL: 
2025-01-25 03:45:58,349 - WARNING - URL model not loaded
2025-01-25 03:45:58,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:45:58,350 - ERROR - Error checking URL: 
2025-01-25 03:46:00,350 - WARNING - URL model not loaded
2025-01-25 03:46:00,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:00,351 - ERROR - Error checking URL: 
2025-01-25 03:46:02,350 - WARNING - URL model not loaded
2025-01-25 03:46:02,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:02,351 - ERROR - Error checking URL: 
2025-01-25 03:46:04,349 - WARNING - URL model not loaded
2025-01-25 03:46:04,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:04,350 - ERROR - Error checking URL: 
2025-01-25 03:46:06,348 - WARNING - URL model not loaded
2025-01-25 03:46:06,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:06,349 - ERROR - Error checking URL: 
2025-01-25 03:46:08,351 - WARNING - URL model not loaded
2025-01-25 03:46:08,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:08,352 - ERROR - Error checking URL: 
2025-01-25 03:46:10,350 - WARNING - URL model not loaded
2025-01-25 03:46:10,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:10,351 - ERROR - Error checking URL: 
2025-01-25 03:46:12,349 - WARNING - URL model not loaded
2025-01-25 03:46:12,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:12,350 - ERROR - Error checking URL: 
2025-01-25 03:46:14,348 - WARNING - URL model not loaded
2025-01-25 03:46:14,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:14,349 - ERROR - Error checking URL: 
2025-01-25 03:46:16,349 - WARNING - URL model not loaded
2025-01-25 03:46:16,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:16,350 - ERROR - Error checking URL: 
2025-01-25 03:46:18,350 - WARNING - URL model not loaded
2025-01-25 03:46:18,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:18,350 - ERROR - Error checking URL: 
2025-01-25 03:46:20,350 - WARNING - URL model not loaded
2025-01-25 03:46:20,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:20,351 - ERROR - Error checking URL: 
2025-01-25 03:46:22,349 - WARNING - URL model not loaded
2025-01-25 03:46:22,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:22,349 - ERROR - Error checking URL: 
2025-01-25 03:46:24,348 - WARNING - URL model not loaded
2025-01-25 03:46:24,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:24,349 - ERROR - Error checking URL: 
2025-01-25 03:46:26,352 - WARNING - URL model not loaded
2025-01-25 03:46:26,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:26,353 - ERROR - Error checking URL: 
2025-01-25 03:46:28,352 - WARNING - URL model not loaded
2025-01-25 03:46:28,353 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:28,353 - ERROR - Error checking URL: 
2025-01-25 03:46:30,350 - WARNING - URL model not loaded
2025-01-25 03:46:30,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:30,350 - ERROR - Error checking URL: 
2025-01-25 03:46:32,351 - WARNING - URL model not loaded
2025-01-25 03:46:32,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:32,352 - ERROR - Error checking URL: 
2025-01-25 03:46:34,350 - WARNING - URL model not loaded
2025-01-25 03:46:34,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:34,351 - ERROR - Error checking URL: 
2025-01-25 03:46:36,351 - WARNING - URL model not loaded
2025-01-25 03:46:36,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:36,352 - ERROR - Error checking URL: 
2025-01-25 03:46:38,350 - WARNING - URL model not loaded
2025-01-25 03:46:38,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:38,351 - ERROR - Error checking URL: 
2025-01-25 03:46:40,350 - WARNING - URL model not loaded
2025-01-25 03:46:40,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:40,351 - ERROR - Error checking URL: 
2025-01-25 03:46:42,348 - WARNING - URL model not loaded
2025-01-25 03:46:42,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:42,356 - ERROR - Error checking URL: 
2025-01-25 03:46:44,350 - WARNING - URL model not loaded
2025-01-25 03:46:44,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:44,351 - ERROR - Error checking URL: 
2025-01-25 03:46:46,351 - WARNING - URL model not loaded
2025-01-25 03:46:46,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:46,352 - ERROR - Error checking URL: 
2025-01-25 03:46:48,348 - WARNING - URL model not loaded
2025-01-25 03:46:48,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:48,349 - ERROR - Error checking URL: 
2025-01-25 03:46:50,348 - WARNING - URL model not loaded
2025-01-25 03:46:50,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:50,349 - ERROR - Error checking URL: 
2025-01-25 03:46:52,348 - WARNING - URL model not loaded
2025-01-25 03:46:52,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:52,349 - ERROR - Error checking URL: 
2025-01-25 03:46:54,348 - WARNING - URL model not loaded
2025-01-25 03:46:54,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:54,349 - ERROR - Error checking URL: 
2025-01-25 03:46:56,349 - WARNING - URL model not loaded
2025-01-25 03:46:56,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:56,349 - ERROR - Error checking URL: 
2025-01-25 03:46:58,348 - WARNING - URL model not loaded
2025-01-25 03:46:58,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:46:58,348 - ERROR - Error checking URL: 
2025-01-25 03:47:00,351 - WARNING - URL model not loaded
2025-01-25 03:47:00,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:00,352 - ERROR - Error checking URL: 
2025-01-25 03:47:02,348 - WARNING - URL model not loaded
2025-01-25 03:47:02,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:02,349 - ERROR - Error checking URL: 
2025-01-25 03:47:04,348 - WARNING - URL model not loaded
2025-01-25 03:47:04,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:04,348 - ERROR - Error checking URL: 
2025-01-25 03:47:06,348 - WARNING - URL model not loaded
2025-01-25 03:47:06,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:06,349 - ERROR - Error checking URL: 
2025-01-25 03:47:08,351 - WARNING - URL model not loaded
2025-01-25 03:47:08,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:08,352 - ERROR - Error checking URL: 
2025-01-25 03:47:09,350 - WARNING - URL model not loaded
2025-01-25 03:47:09,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:09,350 - ERROR - Error checking URL: 
2025-01-25 03:47:11,348 - WARNING - URL model not loaded
2025-01-25 03:47:11,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:11,348 - ERROR - Error checking URL: 
2025-01-25 03:47:13,349 - WARNING - URL model not loaded
2025-01-25 03:47:13,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:13,349 - ERROR - Error checking URL: 
2025-01-25 03:47:15,348 - WARNING - URL model not loaded
2025-01-25 03:47:15,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:15,349 - ERROR - Error checking URL: 
2025-01-25 03:47:17,348 - WARNING - URL model not loaded
2025-01-25 03:47:17,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:17,349 - ERROR - Error checking URL: 
2025-01-25 03:47:19,356 - WARNING - URL model not loaded
2025-01-25 03:47:19,356 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:19,356 - ERROR - Error checking URL: 
2025-01-25 03:47:21,348 - WARNING - URL model not loaded
2025-01-25 03:47:21,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:21,349 - ERROR - Error checking URL: 
2025-01-25 03:47:23,348 - WARNING - URL model not loaded
2025-01-25 03:47:23,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:23,348 - ERROR - Error checking URL: 
2025-01-25 03:47:25,348 - WARNING - URL model not loaded
2025-01-25 03:47:25,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:25,349 - ERROR - Error checking URL: 
2025-01-25 03:47:27,353 - WARNING - URL model not loaded
2025-01-25 03:47:27,354 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:27,354 - ERROR - Error checking URL: 
2025-01-25 03:47:28,968 - WARNING - URL model not loaded
2025-01-25 03:47:28,968 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:28,968 - ERROR - Error checking URL: 
2025-01-25 03:47:29,241 - WARNING - URL model not loaded
2025-01-25 03:47:29,242 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:29,242 - ERROR - Error checking URL: 
2025-01-25 03:47:29,359 - WARNING - URL model not loaded
2025-01-25 03:47:29,360 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:29,360 - ERROR - Error checking URL: 
2025-01-25 03:47:31,348 - WARNING - URL model not loaded
2025-01-25 03:47:31,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:31,349 - ERROR - Error checking URL: 
2025-01-25 03:47:32,059 - WARNING - URL model not loaded
2025-01-25 03:47:32,060 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:32,060 - ERROR - Error checking URL: 
2025-01-25 03:47:34,372 - WARNING - URL model not loaded
2025-01-25 03:47:34,373 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:34,373 - ERROR - Error checking URL: 
2025-01-25 03:47:36,471 - WARNING - URL model not loaded
2025-01-25 03:47:36,471 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:36,472 - ERROR - Error checking URL: 
2025-01-25 03:47:36,781 - WARNING - URL model not loaded
2025-01-25 03:47:36,781 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:36,782 - ERROR - Error checking URL: 
2025-01-25 03:47:37,430 - WARNING - URL model not loaded
2025-01-25 03:47:37,430 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:37,431 - ERROR - Error checking URL: 
2025-01-25 03:47:38,443 - WARNING - URL model not loaded
2025-01-25 03:47:38,443 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:38,443 - ERROR - Error checking URL: 
2025-01-25 03:47:38,987 - WARNING - URL model not loaded
2025-01-25 03:47:38,987 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:38,987 - ERROR - Error checking URL: 
2025-01-25 03:47:40,351 - WARNING - URL model not loaded
2025-01-25 03:47:40,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:40,352 - ERROR - Error checking URL: 
2025-01-25 03:47:41,871 - WARNING - URL model not loaded
2025-01-25 03:47:41,872 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:41,872 - ERROR - Error checking URL: 
2025-01-25 03:47:43,351 - WARNING - URL model not loaded
2025-01-25 03:47:43,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:43,352 - ERROR - Error checking URL: 
2025-01-25 03:47:43,414 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:43,414 - ERROR - Error checking URL: 
2025-01-25 03:47:44,031 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:44,031 - ERROR - Error checking URL: 
2025-01-25 03:47:45,348 - WARNING - URL model not loaded
2025-01-25 03:47:45,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:45,349 - ERROR - Error checking URL: 
2025-01-25 03:47:47,349 - WARNING - URL model not loaded
2025-01-25 03:47:47,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:47,349 - ERROR - Error checking URL: 
2025-01-25 03:47:47,746 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:47,746 - ERROR - Error checking URL: 
2025-01-25 03:47:48,423 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:48,423 - ERROR - Error checking URL: 
2025-01-25 03:47:48,426 - WARNING - URL model not loaded
2025-01-25 03:47:48,426 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:48,426 - ERROR - Error checking URL: 
2025-01-25 03:47:49,350 - WARNING - URL model not loaded
2025-01-25 03:47:49,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:49,351 - ERROR - Error checking URL: 
2025-01-25 03:47:49,445 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:49,445 - ERROR - Error checking URL: 
2025-01-25 03:47:51,349 - WARNING - URL model not loaded
2025-01-25 03:47:51,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:51,350 - ERROR - Error checking URL: 
2025-01-25 03:47:52,230 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:52,230 - ERROR - Error checking URL: 
2025-01-25 03:47:52,385 - WARNING - URL model not loaded
2025-01-25 03:47:52,385 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:52,386 - ERROR - Error checking URL: 
2025-01-25 03:47:53,374 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:53,374 - ERROR - Error checking URL: 
2025-01-25 03:47:54,261 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:54,261 - ERROR - Error checking URL: 
2025-01-25 03:47:54,770 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:54,770 - ERROR - Error checking URL: 
2025-01-25 03:47:56,348 - WARNING - URL model not loaded
2025-01-25 03:47:56,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:56,348 - ERROR - Error checking URL: 
2025-01-25 03:47:56,523 - WARNING - URL model not loaded
2025-01-25 03:47:56,524 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:56,524 - ERROR - Error checking URL: 
2025-01-25 03:47:56,972 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:56,973 - ERROR - Error checking URL: 
2025-01-25 03:47:58,349 - WARNING - URL model not loaded
2025-01-25 03:47:58,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:47:58,349 - ERROR - Error checking URL: 
2025-01-25 03:48:00,348 - WARNING - URL model not loaded
2025-01-25 03:48:00,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:00,349 - ERROR - Error checking URL: 
2025-01-25 03:48:02,349 - WARNING - URL model not loaded
2025-01-25 03:48:02,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:02,350 - ERROR - Error checking URL: 
2025-01-25 03:48:04,350 - WARNING - URL model not loaded
2025-01-25 03:48:04,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:04,351 - ERROR - Error checking URL: 
2025-01-25 03:48:06,349 - WARNING - URL model not loaded
2025-01-25 03:48:06,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:06,350 - ERROR - Error checking URL: 
2025-01-25 03:48:08,350 - WARNING - URL model not loaded
2025-01-25 03:48:08,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:08,351 - ERROR - Error checking URL: 
2025-01-25 03:48:08,404 - WARNING - URL model not loaded
2025-01-25 03:48:08,404 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:08,404 - ERROR - Error checking URL: 
2025-01-25 03:48:09,205 - WARNING - URL model not loaded
2025-01-25 03:48:09,205 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:09,205 - ERROR - Error checking URL: 
2025-01-25 03:48:11,351 - WARNING - URL model not loaded
2025-01-25 03:48:11,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:11,352 - ERROR - Error checking URL: 
2025-01-25 03:48:13,035 - WARNING - URL model not loaded
2025-01-25 03:48:13,035 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:13,036 - ERROR - Error checking URL: 
2025-01-25 03:48:14,348 - WARNING - URL model not loaded
2025-01-25 03:48:14,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:14,349 - ERROR - Error checking URL: 
2025-01-25 03:48:15,149 - WARNING - URL model not loaded
2025-01-25 03:48:15,150 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:15,150 - ERROR - Error checking URL: 
2025-01-25 03:48:17,348 - WARNING - URL model not loaded
2025-01-25 03:48:17,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:17,349 - ERROR - Error checking URL: 
2025-01-25 03:48:17,766 - WARNING - URL model not loaded
2025-01-25 03:48:17,767 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:17,767 - ERROR - Error checking URL: 
2025-01-25 03:48:19,369 - WARNING - URL model not loaded
2025-01-25 03:48:19,369 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:19,369 - ERROR - Error checking URL: 
2025-01-25 03:48:21,209 - WARNING - URL model not loaded
2025-01-25 03:48:21,210 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:21,210 - ERROR - Error checking URL: 
2025-01-25 03:48:21,348 - WARNING - URL model not loaded
2025-01-25 03:48:21,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:21,349 - ERROR - Error checking URL: 
2025-01-25 03:48:23,348 - WARNING - URL model not loaded
2025-01-25 03:48:23,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:23,349 - ERROR - Error checking URL: 
2025-01-25 03:48:25,054 - WARNING - URL model not loaded
2025-01-25 03:48:25,055 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:25,055 - ERROR - Error checking URL: 
2025-01-25 03:48:25,349 - WARNING - URL model not loaded
2025-01-25 03:48:25,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:25,350 - ERROR - Error checking URL: 
2025-01-25 03:48:25,591 - WARNING - URL model not loaded
2025-01-25 03:48:25,591 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:25,592 - ERROR - Error checking URL: 
2025-01-25 03:48:27,350 - WARNING - URL model not loaded
2025-01-25 03:48:27,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:27,351 - ERROR - Error checking URL: 
2025-01-25 03:48:29,349 - WARNING - URL model not loaded
2025-01-25 03:48:29,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:29,349 - ERROR - Error checking URL: 
2025-01-25 03:48:30,539 - WARNING - URL model not loaded
2025-01-25 03:48:30,539 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:30,540 - ERROR - Error checking URL: 
2025-01-25 03:48:32,351 - WARNING - URL model not loaded
2025-01-25 03:48:32,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:32,351 - ERROR - Error checking URL: 
2025-01-25 03:48:32,452 - WARNING - URL model not loaded
2025-01-25 03:48:32,452 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:32,453 - ERROR - Error checking URL: 
2025-01-25 03:48:34,350 - WARNING - URL model not loaded
2025-01-25 03:48:34,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:34,351 - ERROR - Error checking URL: 
2025-01-25 03:48:35,069 - WARNING - URL model not loaded
2025-01-25 03:48:35,069 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:35,070 - ERROR - Error checking URL: 
2025-01-25 03:48:36,370 - WARNING - URL model not loaded
2025-01-25 03:48:36,370 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:36,371 - ERROR - Error checking URL: 
2025-01-25 03:48:37,977 - WARNING - URL model not loaded
2025-01-25 03:48:37,978 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:37,978 - ERROR - Error checking URL: 
2025-01-25 03:48:39,351 - WARNING - URL model not loaded
2025-01-25 03:48:39,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:39,352 - ERROR - Error checking URL: 
2025-01-25 03:48:41,350 - WARNING - URL model not loaded
2025-01-25 03:48:41,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:41,350 - ERROR - Error checking URL: 
2025-01-25 03:48:43,349 - WARNING - URL model not loaded
2025-01-25 03:48:43,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:43,350 - ERROR - Error checking URL: 
2025-01-25 03:48:45,349 - WARNING - URL model not loaded
2025-01-25 03:48:45,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:45,350 - ERROR - Error checking URL: 
2025-01-25 03:48:47,350 - WARNING - URL model not loaded
2025-01-25 03:48:47,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:47,350 - ERROR - Error checking URL: 
2025-01-25 03:48:49,361 - WARNING - URL model not loaded
2025-01-25 03:48:49,362 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:49,362 - ERROR - Error checking URL: 
2025-01-25 03:48:51,351 - WARNING - URL model not loaded
2025-01-25 03:48:51,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:51,351 - ERROR - Error checking URL: 
2025-01-25 03:48:53,351 - WARNING - URL model not loaded
2025-01-25 03:48:53,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:53,352 - ERROR - Error checking URL: 
2025-01-25 03:48:55,348 - WARNING - URL model not loaded
2025-01-25 03:48:55,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:55,349 - ERROR - Error checking URL: 
2025-01-25 03:48:57,348 - WARNING - URL model not loaded
2025-01-25 03:48:57,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:57,348 - ERROR - Error checking URL: 
2025-01-25 03:48:59,349 - WARNING - URL model not loaded
2025-01-25 03:48:59,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:48:59,350 - ERROR - Error checking URL: 
2025-01-25 03:49:01,350 - WARNING - URL model not loaded
2025-01-25 03:49:01,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:01,350 - ERROR - Error checking URL: 
2025-01-25 03:49:03,349 - WARNING - URL model not loaded
2025-01-25 03:49:03,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:03,350 - ERROR - Error checking URL: 
2025-01-25 03:49:05,350 - WARNING - URL model not loaded
2025-01-25 03:49:05,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:05,350 - ERROR - Error checking URL: 
2025-01-25 03:49:07,352 - WARNING - URL model not loaded
2025-01-25 03:49:07,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:07,353 - ERROR - Error checking URL: 
2025-01-25 03:49:09,348 - WARNING - URL model not loaded
2025-01-25 03:49:09,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:09,349 - ERROR - Error checking URL: 
2025-01-25 03:49:11,348 - WARNING - URL model not loaded
2025-01-25 03:49:11,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:11,348 - ERROR - Error checking URL: 
2025-01-25 03:49:13,348 - WARNING - URL model not loaded
2025-01-25 03:49:13,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:13,349 - ERROR - Error checking URL: 
2025-01-25 03:49:15,349 - WARNING - URL model not loaded
2025-01-25 03:49:15,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:15,350 - ERROR - Error checking URL: 
2025-01-25 03:49:17,348 - WARNING - URL model not loaded
2025-01-25 03:49:17,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:17,349 - ERROR - Error checking URL: 
2025-01-25 03:49:19,369 - WARNING - URL model not loaded
2025-01-25 03:49:19,370 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:19,370 - ERROR - Error checking URL: 
2025-01-25 03:49:21,348 - WARNING - URL model not loaded
2025-01-25 03:49:21,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:21,349 - ERROR - Error checking URL: 
2025-01-25 03:49:23,347 - WARNING - URL model not loaded
2025-01-25 03:49:23,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:23,348 - ERROR - Error checking URL: 
2025-01-25 03:49:25,348 - WARNING - URL model not loaded
2025-01-25 03:49:25,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:25,349 - ERROR - Error checking URL: 
2025-01-25 03:49:27,350 - WARNING - URL model not loaded
2025-01-25 03:49:27,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:27,351 - ERROR - Error checking URL: 
2025-01-25 03:49:29,349 - WARNING - URL model not loaded
2025-01-25 03:49:29,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:29,350 - ERROR - Error checking URL: 
2025-01-25 03:49:31,349 - WARNING - URL model not loaded
2025-01-25 03:49:31,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:31,350 - ERROR - Error checking URL: 
2025-01-25 03:49:33,348 - WARNING - URL model not loaded
2025-01-25 03:49:33,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:33,349 - ERROR - Error checking URL: 
2025-01-25 03:49:35,348 - WARNING - URL model not loaded
2025-01-25 03:49:35,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:35,349 - ERROR - Error checking URL: 
2025-01-25 03:49:37,348 - WARNING - URL model not loaded
2025-01-25 03:49:37,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:37,348 - ERROR - Error checking URL: 
2025-01-25 03:49:39,349 - WARNING - URL model not loaded
2025-01-25 03:49:39,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:39,350 - ERROR - Error checking URL: 
2025-01-25 03:49:41,348 - WARNING - URL model not loaded
2025-01-25 03:49:41,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:41,349 - ERROR - Error checking URL: 
2025-01-25 03:49:43,348 - WARNING - URL model not loaded
2025-01-25 03:49:43,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:43,348 - ERROR - Error checking URL: 
2025-01-25 03:49:45,347 - WARNING - URL model not loaded
2025-01-25 03:49:45,347 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:45,347 - ERROR - Error checking URL: 
2025-01-25 03:49:47,347 - WARNING - URL model not loaded
2025-01-25 03:49:47,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:47,349 - ERROR - Error checking URL: 
2025-01-25 03:49:49,348 - WARNING - URL model not loaded
2025-01-25 03:49:49,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:49,348 - ERROR - Error checking URL: 
2025-01-25 03:49:51,347 - WARNING - URL model not loaded
2025-01-25 03:49:51,347 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:51,348 - ERROR - Error checking URL: 
2025-01-25 03:49:53,348 - WARNING - URL model not loaded
2025-01-25 03:49:53,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:53,349 - ERROR - Error checking URL: 
2025-01-25 03:49:55,350 - WARNING - URL model not loaded
2025-01-25 03:49:55,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:55,351 - ERROR - Error checking URL: 
2025-01-25 03:49:58,348 - WARNING - URL model not loaded
2025-01-25 03:49:58,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:49:58,349 - ERROR - Error checking URL: 
2025-01-25 03:50:00,348 - WARNING - URL model not loaded
2025-01-25 03:50:00,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:00,348 - ERROR - Error checking URL: 
2025-01-25 03:50:02,349 - WARNING - URL model not loaded
2025-01-25 03:50:02,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:02,349 - ERROR - Error checking URL: 
2025-01-25 03:50:04,347 - WARNING - URL model not loaded
2025-01-25 03:50:04,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:04,348 - ERROR - Error checking URL: 
2025-01-25 03:50:06,349 - WARNING - URL model not loaded
2025-01-25 03:50:06,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:06,350 - ERROR - Error checking URL: 
2025-01-25 03:50:08,348 - WARNING - URL model not loaded
2025-01-25 03:50:08,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:08,348 - ERROR - Error checking URL: 
2025-01-25 03:50:10,348 - WARNING - URL model not loaded
2025-01-25 03:50:10,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:10,349 - ERROR - Error checking URL: 
2025-01-25 03:50:12,348 - WARNING - URL model not loaded
2025-01-25 03:50:12,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:12,349 - ERROR - Error checking URL: 
2025-01-25 03:50:14,348 - WARNING - URL model not loaded
2025-01-25 03:50:14,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:14,349 - ERROR - Error checking URL: 
2025-01-25 03:50:16,348 - WARNING - URL model not loaded
2025-01-25 03:50:16,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:16,349 - ERROR - Error checking URL: 
2025-01-25 03:50:18,348 - WARNING - URL model not loaded
2025-01-25 03:50:18,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:18,349 - ERROR - Error checking URL: 
2025-01-25 03:50:20,349 - WARNING - URL model not loaded
2025-01-25 03:50:20,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:20,349 - ERROR - Error checking URL: 
2025-01-25 03:50:22,348 - WARNING - URL model not loaded
2025-01-25 03:50:22,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:22,349 - ERROR - Error checking URL: 
2025-01-25 03:50:24,348 - WARNING - URL model not loaded
2025-01-25 03:50:24,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:24,349 - ERROR - Error checking URL: 
2025-01-25 03:50:27,348 - WARNING - URL model not loaded
2025-01-25 03:50:27,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:27,349 - ERROR - Error checking URL: 
2025-01-25 03:50:29,349 - WARNING - URL model not loaded
2025-01-25 03:50:29,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:29,349 - ERROR - Error checking URL: 
2025-01-25 03:50:31,348 - WARNING - URL model not loaded
2025-01-25 03:50:31,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:31,348 - ERROR - Error checking URL: 
2025-01-25 03:50:33,349 - WARNING - URL model not loaded
2025-01-25 03:50:33,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:33,350 - ERROR - Error checking URL: 
2025-01-25 03:50:35,349 - WARNING - URL model not loaded
2025-01-25 03:50:35,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:35,349 - ERROR - Error checking URL: 
2025-01-25 03:50:37,348 - WARNING - URL model not loaded
2025-01-25 03:50:37,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:37,349 - ERROR - Error checking URL: 
2025-01-25 03:50:39,348 - WARNING - URL model not loaded
2025-01-25 03:50:39,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:39,348 - ERROR - Error checking URL: 
2025-01-25 03:50:41,348 - WARNING - URL model not loaded
2025-01-25 03:50:41,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:41,349 - ERROR - Error checking URL: 
2025-01-25 03:50:43,349 - WARNING - URL model not loaded
2025-01-25 03:50:43,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:43,350 - ERROR - Error checking URL: 
2025-01-25 03:50:45,348 - WARNING - URL model not loaded
2025-01-25 03:50:45,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:45,349 - ERROR - Error checking URL: 
2025-01-25 03:50:47,348 - WARNING - URL model not loaded
2025-01-25 03:50:47,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:47,349 - ERROR - Error checking URL: 
2025-01-25 03:50:49,348 - WARNING - URL model not loaded
2025-01-25 03:50:49,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:49,349 - ERROR - Error checking URL: 
2025-01-25 03:50:51,348 - WARNING - URL model not loaded
2025-01-25 03:50:51,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:51,349 - ERROR - Error checking URL: 
2025-01-25 03:50:53,349 - WARNING - URL model not loaded
2025-01-25 03:50:53,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:53,349 - ERROR - Error checking URL: 
2025-01-25 03:50:55,348 - WARNING - URL model not loaded
2025-01-25 03:50:55,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:55,349 - ERROR - Error checking URL: 
2025-01-25 03:50:57,349 - WARNING - URL model not loaded
2025-01-25 03:50:57,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:57,350 - ERROR - Error checking URL: 
2025-01-25 03:50:59,348 - WARNING - URL model not loaded
2025-01-25 03:50:59,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:50:59,348 - ERROR - Error checking URL: 
2025-01-25 03:51:01,348 - WARNING - URL model not loaded
2025-01-25 03:51:01,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:01,349 - ERROR - Error checking URL: 
2025-01-25 03:51:03,348 - WARNING - URL model not loaded
2025-01-25 03:51:03,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:03,348 - ERROR - Error checking URL: 
2025-01-25 03:51:05,349 - WARNING - URL model not loaded
2025-01-25 03:51:05,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:05,349 - ERROR - Error checking URL: 
2025-01-25 03:51:07,348 - WARNING - URL model not loaded
2025-01-25 03:51:07,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:07,348 - ERROR - Error checking URL: 
2025-01-25 03:51:09,349 - WARNING - URL model not loaded
2025-01-25 03:51:09,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:09,349 - ERROR - Error checking URL: 
2025-01-25 03:51:11,348 - WARNING - URL model not loaded
2025-01-25 03:51:11,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:11,349 - ERROR - Error checking URL: 
2025-01-25 03:51:13,348 - WARNING - URL model not loaded
2025-01-25 03:51:13,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:13,349 - ERROR - Error checking URL: 
2025-01-25 03:51:15,348 - WARNING - URL model not loaded
2025-01-25 03:51:15,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:15,349 - ERROR - Error checking URL: 
2025-01-25 03:51:17,349 - WARNING - URL model not loaded
2025-01-25 03:51:17,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:17,349 - ERROR - Error checking URL: 
2025-01-25 03:51:19,367 - WARNING - URL model not loaded
2025-01-25 03:51:19,367 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:19,368 - ERROR - Error checking URL: 
2025-01-25 03:51:21,348 - WARNING - URL model not loaded
2025-01-25 03:51:21,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:21,349 - ERROR - Error checking URL: 
2025-01-25 03:51:23,349 - WARNING - URL model not loaded
2025-01-25 03:51:23,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:23,350 - ERROR - Error checking URL: 
2025-01-25 03:51:25,348 - WARNING - URL model not loaded
2025-01-25 03:51:25,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:25,348 - ERROR - Error checking URL: 
2025-01-25 03:51:27,348 - WARNING - URL model not loaded
2025-01-25 03:51:27,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:27,349 - ERROR - Error checking URL: 
2025-01-25 03:51:29,349 - WARNING - URL model not loaded
2025-01-25 03:51:29,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:29,350 - ERROR - Error checking URL: 
2025-01-25 03:51:32,348 - WARNING - URL model not loaded
2025-01-25 03:51:32,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:32,349 - ERROR - Error checking URL: 
2025-01-25 03:51:34,348 - WARNING - URL model not loaded
2025-01-25 03:51:34,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:34,349 - ERROR - Error checking URL: 
2025-01-25 03:51:37,347 - WARNING - URL model not loaded
2025-01-25 03:51:37,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:37,348 - ERROR - Error checking URL: 
2025-01-25 03:51:39,348 - WARNING - URL model not loaded
2025-01-25 03:51:39,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:39,349 - ERROR - Error checking URL: 
2025-01-25 03:51:41,348 - WARNING - URL model not loaded
2025-01-25 03:51:41,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:41,349 - ERROR - Error checking URL: 
2025-01-25 03:51:43,351 - WARNING - URL model not loaded
2025-01-25 03:51:43,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:43,352 - ERROR - Error checking URL: 
2025-01-25 03:51:43,841 - WARNING - URL model not loaded
2025-01-25 03:51:43,842 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:43,842 - ERROR - Error checking URL: 
2025-01-25 03:51:45,350 - WARNING - URL model not loaded
2025-01-25 03:51:45,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:45,351 - ERROR - Error checking URL: 
2025-01-25 03:51:47,349 - WARNING - URL model not loaded
2025-01-25 03:51:47,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:47,349 - ERROR - Error checking URL: 
2025-01-25 03:51:47,728 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:47,729 - ERROR - Error checking URL: 
2025-01-25 03:51:49,349 - WARNING - URL model not loaded
2025-01-25 03:51:49,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:49,349 - ERROR - Error checking URL: 
2025-01-25 03:51:49,789 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:49,790 - ERROR - Error checking URL: 
2025-01-25 03:51:50,603 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:50,603 - ERROR - Error checking URL: 
2025-01-25 03:51:50,639 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:50,640 - ERROR - Error checking URL: 
2025-01-25 03:51:52,377 - WARNING - URL model not loaded
2025-01-25 03:51:52,377 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:52,378 - ERROR - Error checking URL: 
2025-01-25 03:51:53,282 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:53,282 - ERROR - Error checking URL: 
2025-01-25 03:51:53,854 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:53,855 - ERROR - Error checking URL: 
2025-01-25 03:51:54,794 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:54,795 - ERROR - Error checking URL: 
2025-01-25 03:51:56,349 - WARNING - URL model not loaded
2025-01-25 03:51:56,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:56,350 - ERROR - Error checking URL: 
2025-01-25 03:51:57,701 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:57,702 - ERROR - Error checking URL: 
2025-01-25 03:51:59,349 - WARNING - URL model not loaded
2025-01-25 03:51:59,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:51:59,350 - ERROR - Error checking URL: 
2025-01-25 03:52:01,347 - WARNING - URL model not loaded
2025-01-25 03:52:01,347 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:01,348 - ERROR - Error checking URL: 
2025-01-25 03:52:01,367 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:01,367 - ERROR - Error checking URL: 
2025-01-25 03:52:03,349 - WARNING - URL model not loaded
2025-01-25 03:52:03,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:03,350 - ERROR - Error checking URL: 
2025-01-25 03:52:03,704 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:03,705 - ERROR - Error checking URL: 
2025-01-25 03:52:03,780 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:03,780 - ERROR - Error checking URL: 
2025-01-25 03:52:05,349 - WARNING - URL model not loaded
2025-01-25 03:52:05,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:05,349 - ERROR - Error checking URL: 
2025-01-25 03:52:06,341 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:06,342 - ERROR - Error checking URL: 
2025-01-25 03:52:08,399 - WARNING - URL model not loaded
2025-01-25 03:52:08,399 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:08,400 - ERROR - Error checking URL: 
2025-01-25 03:52:09,415 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:09,416 - ERROR - Error checking URL: 
2025-01-25 03:52:10,338 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:10,338 - ERROR - Error checking URL: 
2025-01-25 03:52:11,000 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:11,001 - ERROR - Error checking URL: 
2025-01-25 03:52:11,765 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:11,765 - ERROR - Error checking URL: 
2025-01-25 03:52:13,131 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:13,131 - ERROR - Error checking URL: 
2025-01-25 03:52:13,347 - WARNING - URL model not loaded
2025-01-25 03:52:13,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:13,348 - ERROR - Error checking URL: 
2025-01-25 03:52:15,349 - WARNING - URL model not loaded
2025-01-25 03:52:15,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:15,350 - ERROR - Error checking URL: 
2025-01-25 03:52:16,141 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:16,142 - ERROR - Error checking URL: 
2025-01-25 03:52:17,877 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:17,877 - ERROR - Error checking URL: 
2025-01-25 03:52:19,352 - WARNING - URL model not loaded
2025-01-25 03:52:19,353 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:19,353 - ERROR - Error checking URL: 
2025-01-25 03:52:21,348 - WARNING - URL model not loaded
2025-01-25 03:52:21,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:21,349 - ERROR - Error checking URL: 
2025-01-25 03:52:21,645 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:21,645 - ERROR - Error checking URL: 
2025-01-25 03:52:23,349 - WARNING - URL model not loaded
2025-01-25 03:52:23,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:23,350 - ERROR - Error checking URL: 
2025-01-25 03:52:24,108 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:24,108 - ERROR - Error checking URL: 
2025-01-25 03:52:25,513 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:25,513 - ERROR - Error checking URL: 
2025-01-25 03:52:26,460 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:26,460 - ERROR - Error checking URL: 
2025-01-25 03:52:28,350 - WARNING - URL model not loaded
2025-01-25 03:52:28,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:28,351 - ERROR - Error checking URL: 
2025-01-25 03:52:28,447 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:28,447 - ERROR - Error checking URL: 
2025-01-25 03:52:29,369 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:29,369 - ERROR - Error checking URL: 
2025-01-25 03:52:30,881 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:30,881 - ERROR - Error checking URL: 
2025-01-25 03:52:31,584 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:31,584 - ERROR - Error checking URL: 
2025-01-25 03:52:34,349 - WARNING - URL model not loaded
2025-01-25 03:52:34,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:34,350 - ERROR - Error checking URL: 
2025-01-25 03:52:36,143 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:36,143 - ERROR - Error checking URL: 
2025-01-25 03:52:36,349 - WARNING - URL model not loaded
2025-01-25 03:52:36,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:36,349 - ERROR - Error checking URL: 
2025-01-25 03:52:38,348 - WARNING - URL model not loaded
2025-01-25 03:52:38,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:38,349 - ERROR - Error checking URL: 
2025-01-25 03:52:38,390 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:38,390 - ERROR - Error checking URL: 
2025-01-25 03:52:40,348 - WARNING - URL model not loaded
2025-01-25 03:52:40,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:40,349 - ERROR - Error checking URL: 
2025-01-25 03:52:40,779 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:40,779 - ERROR - Error checking URL: 
2025-01-25 03:52:42,348 - WARNING - URL model not loaded
2025-01-25 03:52:42,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:42,349 - ERROR - Error checking URL: 
2025-01-25 03:52:44,349 - WARNING - URL model not loaded
2025-01-25 03:52:44,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:44,350 - ERROR - Error checking URL: 
2025-01-25 03:52:46,349 - WARNING - URL model not loaded
2025-01-25 03:52:46,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:46,350 - ERROR - Error checking URL: 
2025-01-25 03:52:48,348 - WARNING - URL model not loaded
2025-01-25 03:52:48,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:48,349 - ERROR - Error checking URL: 
2025-01-25 03:52:50,348 - WARNING - URL model not loaded
2025-01-25 03:52:50,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:50,348 - ERROR - Error checking URL: 
2025-01-25 03:52:52,348 - WARNING - URL model not loaded
2025-01-25 03:52:52,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:52,348 - ERROR - Error checking URL: 
2025-01-25 03:52:53,986 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:53,986 - ERROR - Error checking URL: 
2025-01-25 03:52:54,348 - WARNING - URL model not loaded
2025-01-25 03:52:54,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:54,349 - ERROR - Error checking URL: 
2025-01-25 03:52:56,253 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:56,253 - ERROR - Error checking URL: 
2025-01-25 03:52:56,348 - WARNING - URL model not loaded
2025-01-25 03:52:56,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:56,348 - ERROR - Error checking URL: 
2025-01-25 03:52:57,697 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:57,697 - ERROR - Error checking URL: 
2025-01-25 03:52:58,416 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:58,416 - ERROR - Error checking URL: 
2025-01-25 03:52:59,834 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:52:59,834 - ERROR - Error checking URL: 
2025-01-25 03:53:00,348 - WARNING - URL model not loaded
2025-01-25 03:53:00,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:00,349 - ERROR - Error checking URL: 
2025-01-25 03:53:00,890 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:00,891 - ERROR - Error checking URL: 
2025-01-25 03:53:02,344 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:02,345 - ERROR - Error checking URL: 
2025-01-25 03:53:02,351 - WARNING - URL model not loaded
2025-01-25 03:53:02,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:02,352 - ERROR - Error checking URL: 
2025-01-25 03:53:04,348 - WARNING - URL model not loaded
2025-01-25 03:53:04,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:04,349 - ERROR - Error checking URL: 
2025-01-25 03:53:04,443 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:04,443 - ERROR - Error checking URL: 
2025-01-25 03:53:06,346 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:06,347 - ERROR - Error checking URL: 
2025-01-25 03:53:06,349 - WARNING - URL model not loaded
2025-01-25 03:53:06,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:06,350 - ERROR - Error checking URL: 
2025-01-25 03:53:08,349 - WARNING - URL model not loaded
2025-01-25 03:53:08,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:08,349 - ERROR - Error checking URL: 
2025-01-25 03:53:08,762 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:08,762 - ERROR - Error checking URL: 
2025-01-25 03:53:10,348 - WARNING - URL model not loaded
2025-01-25 03:53:10,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:10,349 - ERROR - Error checking URL: 
2025-01-25 03:53:12,349 - WARNING - URL model not loaded
2025-01-25 03:53:12,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:12,349 - ERROR - Error checking URL: 
2025-01-25 03:53:12,457 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:12,457 - ERROR - Error checking URL: 
2025-01-25 03:53:14,349 - WARNING - URL model not loaded
2025-01-25 03:53:14,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:14,349 - ERROR - Error checking URL: 
2025-01-25 03:53:15,339 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:15,340 - ERROR - Error checking URL: 
2025-01-25 03:53:16,026 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:16,026 - ERROR - Error checking URL: 
2025-01-25 03:53:17,348 - WARNING - URL model not loaded
2025-01-25 03:53:17,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:17,348 - ERROR - Error checking URL: 
2025-01-25 03:53:17,711 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:17,713 - ERROR - Error checking URL: 
2025-01-25 03:53:18,815 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:18,815 - ERROR - Error checking URL: 
2025-01-25 03:53:20,025 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:20,026 - ERROR - Error checking URL: 
2025-01-25 03:53:22,021 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:22,021 - ERROR - Error checking URL: 
2025-01-25 03:53:22,349 - WARNING - URL model not loaded
2025-01-25 03:53:22,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:22,350 - ERROR - Error checking URL: 
2025-01-25 03:53:23,028 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:23,028 - ERROR - Error checking URL: 
2025-01-25 03:53:24,056 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:24,056 - ERROR - Error checking URL: 
2025-01-25 03:53:25,348 - WARNING - URL model not loaded
2025-01-25 03:53:25,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:25,349 - ERROR - Error checking URL: 
2025-01-25 03:53:27,349 - WARNING - URL model not loaded
2025-01-25 03:53:27,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:27,350 - ERROR - Error checking URL: 
2025-01-25 03:53:29,349 - WARNING - URL model not loaded
2025-01-25 03:53:29,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:29,350 - ERROR - Error checking URL: 
2025-01-25 03:53:30,959 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:30,959 - ERROR - Error checking URL: 
2025-01-25 03:53:32,348 - WARNING - URL model not loaded
2025-01-25 03:53:32,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:32,349 - ERROR - Error checking URL: 
2025-01-25 03:53:34,348 - WARNING - URL model not loaded
2025-01-25 03:53:34,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:34,349 - ERROR - Error checking URL: 
2025-01-25 03:53:34,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:34,352 - ERROR - Error checking URL: 
2025-01-25 03:53:36,348 - WARNING - URL model not loaded
2025-01-25 03:53:36,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:36,349 - ERROR - Error checking URL: 
2025-01-25 03:53:38,039 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:38,039 - ERROR - Error checking URL: 
2025-01-25 03:53:38,348 - WARNING - URL model not loaded
2025-01-25 03:53:38,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:38,349 - ERROR - Error checking URL: 
2025-01-25 03:53:40,348 - WARNING - URL model not loaded
2025-01-25 03:53:40,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:40,349 - ERROR - Error checking URL: 
2025-01-25 03:53:42,012 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:42,013 - ERROR - Error checking URL: 
2025-01-25 03:53:43,349 - WARNING - URL model not loaded
2025-01-25 03:53:43,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:43,350 - ERROR - Error checking URL: 
2025-01-25 03:53:44,075 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:44,075 - ERROR - Error checking URL: 
2025-01-25 03:53:46,350 - WARNING - URL model not loaded
2025-01-25 03:53:46,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:46,351 - ERROR - Error checking URL: 
2025-01-25 03:53:48,349 - WARNING - URL model not loaded
2025-01-25 03:53:48,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:48,350 - ERROR - Error checking URL: 
2025-01-25 03:53:49,398 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:49,398 - ERROR - Error checking URL: 
2025-01-25 03:53:51,349 - WARNING - URL model not loaded
2025-01-25 03:53:51,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:51,350 - ERROR - Error checking URL: 
2025-01-25 03:53:52,975 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:52,976 - ERROR - Error checking URL: 
2025-01-25 03:53:54,348 - WARNING - URL model not loaded
2025-01-25 03:53:54,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:54,349 - ERROR - Error checking URL: 
2025-01-25 03:53:54,413 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:54,413 - ERROR - Error checking URL: 
2025-01-25 03:53:56,350 - WARNING - URL model not loaded
2025-01-25 03:53:56,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:56,351 - ERROR - Error checking URL: 
2025-01-25 03:53:58,349 - WARNING - URL model not loaded
2025-01-25 03:53:58,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:58,350 - ERROR - Error checking URL: 
2025-01-25 03:53:58,785 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:53:58,786 - ERROR - Error checking URL: 
2025-01-25 03:54:00,350 - WARNING - URL model not loaded
2025-01-25 03:54:00,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:00,351 - ERROR - Error checking URL: 
2025-01-25 03:54:00,844 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:00,844 - ERROR - Error checking URL: 
2025-01-25 03:54:01,872 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:01,872 - ERROR - Error checking URL: 
2025-01-25 03:54:03,110 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:03,110 - ERROR - Error checking URL: 
2025-01-25 03:54:03,348 - WARNING - URL model not loaded
2025-01-25 03:54:03,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:03,349 - ERROR - Error checking URL: 
2025-01-25 03:54:03,918 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:03,918 - ERROR - Error checking URL: 
2025-01-25 03:54:05,348 - WARNING - URL model not loaded
2025-01-25 03:54:05,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:05,349 - ERROR - Error checking URL: 
2025-01-25 03:54:06,363 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:06,363 - ERROR - Error checking URL: 
2025-01-25 03:54:07,013 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:07,014 - ERROR - Error checking URL: 
2025-01-25 03:54:08,293 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:08,294 - ERROR - Error checking URL: 
2025-01-25 03:54:08,349 - WARNING - URL model not loaded
2025-01-25 03:54:08,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:08,350 - ERROR - Error checking URL: 
2025-01-25 03:54:09,064 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:09,064 - ERROR - Error checking URL: 
2025-01-25 03:54:10,086 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:10,087 - ERROR - Error checking URL: 
2025-01-25 03:54:11,112 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:11,112 - ERROR - Error checking URL: 
2025-01-25 03:54:12,145 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:12,145 - ERROR - Error checking URL: 
2025-01-25 03:54:12,422 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:12,422 - ERROR - Error checking URL: 
2025-01-25 03:54:14,395 - WARNING - URL model not loaded
2025-01-25 03:54:14,396 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:14,396 - ERROR - Error checking URL: 
2025-01-25 03:54:15,552 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:15,552 - ERROR - Error checking URL: 
2025-01-25 03:54:16,600 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:16,601 - ERROR - Error checking URL: 
2025-01-25 03:54:17,631 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:17,631 - ERROR - Error checking URL: 
2025-01-25 03:54:18,669 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:18,669 - ERROR - Error checking URL: 
2025-01-25 03:54:19,006 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:19,006 - ERROR - Error checking URL: 
2025-01-25 03:54:20,354 - WARNING - URL model not loaded
2025-01-25 03:54:20,356 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:20,358 - ERROR - Error checking URL: 
2025-01-25 03:54:22,103 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:22,103 - ERROR - Error checking URL: 
2025-01-25 03:54:22,349 - WARNING - URL model not loaded
2025-01-25 03:54:22,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:22,350 - ERROR - Error checking URL: 
2025-01-25 03:54:23,132 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:23,132 - ERROR - Error checking URL: 
2025-01-25 03:54:24,180 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:24,180 - ERROR - Error checking URL: 
2025-01-25 03:54:25,248 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:25,249 - ERROR - Error checking URL: 
2025-01-25 03:54:26,225 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:26,225 - ERROR - Error checking URL: 
2025-01-25 03:54:27,537 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:27,537 - ERROR - Error checking URL: 
2025-01-25 03:54:28,314 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:28,314 - ERROR - Error checking URL: 
2025-01-25 03:54:29,355 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:29,355 - ERROR - Error checking URL: 
2025-01-25 03:54:30,385 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:30,385 - ERROR - Error checking URL: 
2025-01-25 03:54:31,435 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:31,435 - ERROR - Error checking URL: 
2025-01-25 03:54:32,452 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:32,453 - ERROR - Error checking URL: 
2025-01-25 03:54:33,138 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:33,138 - ERROR - Error checking URL: 
2025-01-25 03:54:34,886 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:34,886 - ERROR - Error checking URL: 
2025-01-25 03:54:35,633 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:35,633 - ERROR - Error checking URL: 
2025-01-25 03:54:37,350 - WARNING - URL model not loaded
2025-01-25 03:54:37,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:37,350 - ERROR - Error checking URL: 
2025-01-25 03:54:37,698 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:37,698 - ERROR - Error checking URL: 
2025-01-25 03:54:38,739 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:38,739 - ERROR - Error checking URL: 
2025-01-25 03:54:39,160 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:39,161 - ERROR - Error checking URL: 
2025-01-25 03:54:41,170 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:41,170 - ERROR - Error checking URL: 
2025-01-25 03:54:41,349 - WARNING - URL model not loaded
2025-01-25 03:54:41,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:41,350 - ERROR - Error checking URL: 
2025-01-25 03:54:41,867 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:41,868 - ERROR - Error checking URL: 
2025-01-25 03:54:42,893 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:42,894 - ERROR - Error checking URL: 
2025-01-25 03:54:43,931 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:43,931 - ERROR - Error checking URL: 
2025-01-25 03:54:44,963 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:44,963 - ERROR - Error checking URL: 
2025-01-25 03:54:45,996 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:45,996 - ERROR - Error checking URL: 
2025-01-25 03:54:47,042 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:47,042 - ERROR - Error checking URL: 
2025-01-25 03:54:48,066 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:48,066 - ERROR - Error checking URL: 
2025-01-25 03:54:49,133 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:49,133 - ERROR - Error checking URL: 
2025-01-25 03:54:49,349 - WARNING - URL model not loaded
2025-01-25 03:54:49,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:49,349 - ERROR - Error checking URL: 
2025-01-25 03:54:50,159 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:50,159 - ERROR - Error checking URL: 
2025-01-25 03:54:51,191 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:51,191 - ERROR - Error checking URL: 
2025-01-25 03:54:52,230 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:52,230 - ERROR - Error checking URL: 
2025-01-25 03:54:53,272 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:53,272 - ERROR - Error checking URL: 
2025-01-25 03:54:54,314 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:54,315 - ERROR - Error checking URL: 
2025-01-25 03:54:55,354 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:55,354 - ERROR - Error checking URL: 
2025-01-25 03:54:56,379 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:56,379 - ERROR - Error checking URL: 
2025-01-25 03:54:57,430 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:57,431 - ERROR - Error checking URL: 
2025-01-25 03:54:58,470 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:58,470 - ERROR - Error checking URL: 
2025-01-25 03:54:59,511 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:54:59,511 - ERROR - Error checking URL: 
2025-01-25 03:55:00,559 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:00,559 - ERROR - Error checking URL: 
2025-01-25 03:55:01,585 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:01,586 - ERROR - Error checking URL: 
2025-01-25 03:55:02,628 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:02,628 - ERROR - Error checking URL: 
2025-01-25 03:55:03,656 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:03,656 - ERROR - Error checking URL: 
2025-01-25 03:55:04,700 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:04,701 - ERROR - Error checking URL: 
2025-01-25 03:55:05,733 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:05,733 - ERROR - Error checking URL: 
2025-01-25 03:55:06,778 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:06,779 - ERROR - Error checking URL: 
2025-01-25 03:55:07,807 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:07,807 - ERROR - Error checking URL: 
2025-01-25 03:55:08,852 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:08,852 - ERROR - Error checking URL: 
2025-01-25 03:55:09,907 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:09,908 - ERROR - Error checking URL: 
2025-01-25 03:55:10,954 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:10,955 - ERROR - Error checking URL: 
2025-01-25 03:55:11,993 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:11,993 - ERROR - Error checking URL: 
2025-01-25 03:55:13,042 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:13,042 - ERROR - Error checking URL: 
2025-01-25 03:55:14,084 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:14,085 - ERROR - Error checking URL: 
2025-01-25 03:55:14,349 - WARNING - URL model not loaded
2025-01-25 03:55:14,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:14,350 - ERROR - Error checking URL: 
2025-01-25 03:55:15,115 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:15,116 - ERROR - Error checking URL: 
2025-01-25 03:55:16,161 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:16,161 - ERROR - Error checking URL: 
2025-01-25 03:55:17,206 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:17,206 - ERROR - Error checking URL: 
2025-01-25 03:55:18,234 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:18,234 - ERROR - Error checking URL: 
2025-01-25 03:55:19,217 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:19,217 - ERROR - Error checking URL: 
2025-01-25 03:55:21,350 - WARNING - URL model not loaded
2025-01-25 03:55:21,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:21,350 - ERROR - Error checking URL: 
2025-01-25 03:55:22,488 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:22,489 - ERROR - Error checking URL: 
2025-01-25 03:55:23,530 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:23,530 - ERROR - Error checking URL: 
2025-01-25 03:55:24,119 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:24,120 - ERROR - Error checking URL: 
2025-01-25 03:55:26,347 - WARNING - URL model not loaded
2025-01-25 03:55:26,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:26,348 - ERROR - Error checking URL: 
2025-01-25 03:55:27,375 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:27,376 - ERROR - Error checking URL: 
2025-01-25 03:55:27,960 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:27,961 - ERROR - Error checking URL: 
2025-01-25 03:55:29,008 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:29,008 - ERROR - Error checking URL: 
2025-01-25 03:55:30,209 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:30,209 - ERROR - Error checking URL: 
2025-01-25 03:55:30,348 - WARNING - URL model not loaded
2025-01-25 03:55:30,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:30,349 - ERROR - Error checking URL: 
2025-01-25 03:55:32,230 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:32,230 - ERROR - Error checking URL: 
2025-01-25 03:55:32,348 - WARNING - URL model not loaded
2025-01-25 03:55:32,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:32,348 - ERROR - Error checking URL: 
2025-01-25 03:55:34,347 - WARNING - URL model not loaded
2025-01-25 03:55:34,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:34,348 - ERROR - Error checking URL: 
2025-01-25 03:55:36,349 - WARNING - URL model not loaded
2025-01-25 03:55:36,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:36,349 - ERROR - Error checking URL: 
2025-01-25 03:55:38,348 - WARNING - URL model not loaded
2025-01-25 03:55:38,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:38,349 - ERROR - Error checking URL: 
2025-01-25 03:55:38,675 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:38,676 - ERROR - Error checking URL: 
2025-01-25 03:55:39,571 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:39,571 - ERROR - Error checking URL: 
2025-01-25 03:55:41,348 - WARNING - URL model not loaded
2025-01-25 03:55:41,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:41,349 - ERROR - Error checking URL: 
2025-01-25 03:55:41,658 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:41,658 - ERROR - Error checking URL: 
2025-01-25 03:55:42,704 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:42,704 - ERROR - Error checking URL: 
2025-01-25 03:55:43,756 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:43,756 - ERROR - Error checking URL: 
2025-01-25 03:55:44,802 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:44,802 - ERROR - Error checking URL: 
2025-01-25 03:55:45,858 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:45,858 - ERROR - Error checking URL: 
2025-01-25 03:55:46,896 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:46,896 - ERROR - Error checking URL: 
2025-01-25 03:55:47,943 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:47,944 - ERROR - Error checking URL: 
2025-01-25 03:55:49,002 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:49,003 - ERROR - Error checking URL: 
2025-01-25 03:55:50,032 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:50,032 - ERROR - Error checking URL: 
2025-01-25 03:55:51,349 - WARNING - URL model not loaded
2025-01-25 03:55:51,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:51,350 - ERROR - Error checking URL: 
2025-01-25 03:55:52,128 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:52,128 - ERROR - Error checking URL: 
2025-01-25 03:55:54,348 - WARNING - URL model not loaded
2025-01-25 03:55:54,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:54,349 - ERROR - Error checking URL: 
2025-01-25 03:55:54,629 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:54,630 - ERROR - Error checking URL: 
2025-01-25 03:55:55,255 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:55,256 - ERROR - Error checking URL: 
2025-01-25 03:55:56,276 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:56,276 - ERROR - Error checking URL: 
2025-01-25 03:55:57,312 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:57,312 - ERROR - Error checking URL: 
2025-01-25 03:55:58,361 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:58,361 - ERROR - Error checking URL: 
2025-01-25 03:55:59,409 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:55:59,409 - ERROR - Error checking URL: 
2025-01-25 03:56:00,466 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:00,466 - ERROR - Error checking URL: 
2025-01-25 03:56:01,514 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:01,515 - ERROR - Error checking URL: 
2025-01-25 03:56:02,559 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:02,559 - ERROR - Error checking URL: 
2025-01-25 03:56:03,613 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:03,613 - ERROR - Error checking URL: 
2025-01-25 03:56:04,658 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:04,658 - ERROR - Error checking URL: 
2025-01-25 03:56:05,708 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:05,709 - ERROR - Error checking URL: 
2025-01-25 03:56:06,764 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:06,764 - ERROR - Error checking URL: 
2025-01-25 03:56:07,813 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:07,814 - ERROR - Error checking URL: 
2025-01-25 03:56:08,869 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:08,870 - ERROR - Error checking URL: 
2025-01-25 03:56:09,916 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:09,916 - ERROR - Error checking URL: 
2025-01-25 03:56:10,966 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:10,967 - ERROR - Error checking URL: 
2025-01-25 03:56:12,015 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:12,016 - ERROR - Error checking URL: 
2025-01-25 03:56:13,044 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:13,044 - ERROR - Error checking URL: 
2025-01-25 03:56:14,073 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:14,073 - ERROR - Error checking URL: 
2025-01-25 03:56:15,104 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:15,104 - ERROR - Error checking URL: 
2025-01-25 03:56:15,348 - WARNING - URL model not loaded
2025-01-25 03:56:15,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:15,349 - ERROR - Error checking URL: 
2025-01-25 03:56:16,140 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:16,140 - ERROR - Error checking URL: 
2025-01-25 03:56:17,173 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:17,173 - ERROR - Error checking URL: 
2025-01-25 03:56:18,198 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:18,199 - ERROR - Error checking URL: 
2025-01-25 03:56:19,251 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:19,251 - ERROR - Error checking URL: 
2025-01-25 03:56:20,310 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:20,310 - ERROR - Error checking URL: 
2025-01-25 03:56:21,334 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:21,335 - ERROR - Error checking URL: 
2025-01-25 03:56:22,387 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:22,388 - ERROR - Error checking URL: 
2025-01-25 03:56:22,576 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:22,577 - ERROR - Error checking URL: 
2025-01-25 03:56:23,425 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:23,425 - ERROR - Error checking URL: 
2025-01-25 03:56:24,462 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:24,463 - ERROR - Error checking URL: 
2025-01-25 03:56:25,516 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:25,517 - ERROR - Error checking URL: 
2025-01-25 03:56:26,567 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:26,568 - ERROR - Error checking URL: 
2025-01-25 03:56:27,617 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:27,617 - ERROR - Error checking URL: 
2025-01-25 03:56:28,671 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:28,671 - ERROR - Error checking URL: 
2025-01-25 03:56:29,722 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:29,722 - ERROR - Error checking URL: 
2025-01-25 03:56:30,776 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:30,776 - ERROR - Error checking URL: 
2025-01-25 03:56:31,755 - WARNING - URL model not loaded
2025-01-25 03:56:31,755 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:31,756 - ERROR - Error checking URL: 
2025-01-25 03:56:32,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:32,349 - ERROR - Error checking URL: 
2025-01-25 03:56:33,354 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:33,354 - ERROR - Error checking URL: 
2025-01-25 03:56:35,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:35,349 - ERROR - Error checking URL: 
2025-01-25 03:56:35,350 - WARNING - URL model not loaded
2025-01-25 03:56:35,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:35,351 - ERROR - Error checking URL: 
2025-01-25 03:56:36,566 - WARNING - URL model not loaded
2025-01-25 03:56:36,566 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:36,566 - ERROR - Error checking URL: 
2025-01-25 03:56:37,360 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:37,361 - ERROR - Error checking URL: 
2025-01-25 03:56:38,130 - WARNING - URL model not loaded
2025-01-25 03:56:38,130 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:38,131 - ERROR - Error checking URL: 
2025-01-25 03:56:38,915 - WARNING - URL model not loaded
2025-01-25 03:56:38,915 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:38,915 - ERROR - Error checking URL: 
2025-01-25 03:56:39,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:39,348 - ERROR - Error checking URL: 
2025-01-25 03:56:40,140 - WARNING - URL model not loaded
2025-01-25 03:56:40,140 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:40,141 - ERROR - Error checking URL: 
2025-01-25 03:56:41,019 - WARNING - URL model not loaded
2025-01-25 03:56:41,019 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:41,019 - ERROR - Error checking URL: 
2025-01-25 03:56:41,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:41,349 - ERROR - Error checking URL: 
2025-01-25 03:56:42,222 - WARNING - URL model not loaded
2025-01-25 03:56:42,223 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:42,223 - ERROR - Error checking URL: 
2025-01-25 03:56:43,069 - WARNING - URL model not loaded
2025-01-25 03:56:43,070 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:43,071 - ERROR - Error checking URL: 
2025-01-25 03:56:43,353 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:43,354 - ERROR - Error checking URL: 
2025-01-25 03:56:44,160 - WARNING - URL model not loaded
2025-01-25 03:56:44,160 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:44,160 - ERROR - Error checking URL: 
2025-01-25 03:56:44,947 - WARNING - URL model not loaded
2025-01-25 03:56:44,947 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:44,948 - ERROR - Error checking URL: 
2025-01-25 03:56:45,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:45,350 - ERROR - Error checking URL: 
2025-01-25 03:56:46,152 - WARNING - URL model not loaded
2025-01-25 03:56:46,153 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:46,153 - ERROR - Error checking URL: 
2025-01-25 03:56:46,940 - WARNING - URL model not loaded
2025-01-25 03:56:46,940 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:46,941 - ERROR - Error checking URL: 
2025-01-25 03:56:47,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:47,348 - ERROR - Error checking URL: 
2025-01-25 03:56:48,173 - WARNING - URL model not loaded
2025-01-25 03:56:48,174 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:48,174 - ERROR - Error checking URL: 
2025-01-25 03:56:48,968 - WARNING - URL model not loaded
2025-01-25 03:56:48,969 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:48,969 - ERROR - Error checking URL: 
2025-01-25 03:56:49,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:49,352 - ERROR - Error checking URL: 
2025-01-25 03:56:50,208 - WARNING - URL model not loaded
2025-01-25 03:56:50,208 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:50,209 - ERROR - Error checking URL: 
2025-01-25 03:56:51,016 - WARNING - URL model not loaded
2025-01-25 03:56:51,016 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:51,016 - ERROR - Error checking URL: 
2025-01-25 03:56:51,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:51,348 - ERROR - Error checking URL: 
2025-01-25 03:56:52,126 - WARNING - URL model not loaded
2025-01-25 03:56:52,127 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:52,127 - ERROR - Error checking URL: 
2025-01-25 03:56:52,914 - WARNING - URL model not loaded
2025-01-25 03:56:52,915 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:52,915 - ERROR - Error checking URL: 
2025-01-25 03:56:53,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:53,348 - ERROR - Error checking URL: 
2025-01-25 03:56:54,173 - WARNING - URL model not loaded
2025-01-25 03:56:54,173 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:54,174 - ERROR - Error checking URL: 
2025-01-25 03:56:54,970 - WARNING - URL model not loaded
2025-01-25 03:56:54,971 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:54,971 - ERROR - Error checking URL: 
2025-01-25 03:56:55,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:55,348 - ERROR - Error checking URL: 
2025-01-25 03:56:56,079 - WARNING - URL model not loaded
2025-01-25 03:56:56,079 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:56,080 - ERROR - Error checking URL: 
2025-01-25 03:56:56,845 - WARNING - URL model not loaded
2025-01-25 03:56:56,846 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:56,846 - ERROR - Error checking URL: 
2025-01-25 03:56:57,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:57,349 - ERROR - Error checking URL: 
2025-01-25 03:56:58,165 - WARNING - URL model not loaded
2025-01-25 03:56:58,166 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:58,166 - ERROR - Error checking URL: 
2025-01-25 03:56:58,971 - WARNING - URL model not loaded
2025-01-25 03:56:58,971 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:58,971 - ERROR - Error checking URL: 
2025-01-25 03:56:59,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:56:59,348 - ERROR - Error checking URL: 
2025-01-25 03:57:00,130 - WARNING - URL model not loaded
2025-01-25 03:57:00,130 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:00,130 - ERROR - Error checking URL: 
2025-01-25 03:57:00,949 - WARNING - URL model not loaded
2025-01-25 03:57:00,949 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:00,949 - ERROR - Error checking URL: 
2025-01-25 03:57:01,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:01,348 - ERROR - Error checking URL: 
2025-01-25 03:57:02,167 - WARNING - URL model not loaded
2025-01-25 03:57:02,167 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:02,167 - ERROR - Error checking URL: 
2025-01-25 03:57:03,051 - WARNING - URL model not loaded
2025-01-25 03:57:03,052 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:03,053 - ERROR - Error checking URL: 
2025-01-25 03:57:03,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:03,348 - ERROR - Error checking URL: 
2025-01-25 03:57:03,935 - WARNING - URL model not loaded
2025-01-25 03:57:03,935 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:03,935 - ERROR - Error checking URL: 
2025-01-25 03:57:04,845 - WARNING - URL model not loaded
2025-01-25 03:57:04,845 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:04,846 - ERROR - Error checking URL: 
2025-01-25 03:57:05,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:05,349 - ERROR - Error checking URL: 
2025-01-25 03:57:06,210 - WARNING - URL model not loaded
2025-01-25 03:57:06,210 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:06,210 - ERROR - Error checking URL: 
2025-01-25 03:57:07,011 - WARNING - URL model not loaded
2025-01-25 03:57:07,011 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:07,012 - ERROR - Error checking URL: 
2025-01-25 03:57:07,347 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:07,347 - ERROR - Error checking URL: 
2025-01-25 03:57:08,184 - WARNING - URL model not loaded
2025-01-25 03:57:08,185 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:08,185 - ERROR - Error checking URL: 
2025-01-25 03:57:09,027 - WARNING - URL model not loaded
2025-01-25 03:57:09,028 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:09,028 - ERROR - Error checking URL: 
2025-01-25 03:57:09,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:09,348 - ERROR - Error checking URL: 
2025-01-25 03:57:10,143 - WARNING - URL model not loaded
2025-01-25 03:57:10,144 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:10,144 - ERROR - Error checking URL: 
2025-01-25 03:57:11,050 - WARNING - URL model not loaded
2025-01-25 03:57:11,050 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:11,051 - ERROR - Error checking URL: 
2025-01-25 03:57:11,354 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:11,354 - ERROR - Error checking URL: 
2025-01-25 03:57:12,212 - WARNING - URL model not loaded
2025-01-25 03:57:12,213 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:12,213 - ERROR - Error checking URL: 
2025-01-25 03:57:13,101 - WARNING - URL model not loaded
2025-01-25 03:57:13,102 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:13,102 - ERROR - Error checking URL: 
2025-01-25 03:57:13,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:13,351 - ERROR - Error checking URL: 
2025-01-25 03:57:14,006 - WARNING - URL model not loaded
2025-01-25 03:57:14,006 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:14,006 - ERROR - Error checking URL: 
2025-01-25 03:57:14,878 - WARNING - URL model not loaded
2025-01-25 03:57:14,878 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:14,878 - ERROR - Error checking URL: 
2025-01-25 03:57:15,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:15,350 - ERROR - Error checking URL: 
2025-01-25 03:57:16,169 - WARNING - URL model not loaded
2025-01-25 03:57:16,169 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:16,170 - ERROR - Error checking URL: 
2025-01-25 03:57:17,012 - WARNING - URL model not loaded
2025-01-25 03:57:17,012 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:17,013 - ERROR - Error checking URL: 
2025-01-25 03:57:17,362 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:17,363 - ERROR - Error checking URL: 
2025-01-25 03:57:18,255 - WARNING - URL model not loaded
2025-01-25 03:57:18,255 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:18,256 - ERROR - Error checking URL: 
2025-01-25 03:57:19,221 - WARNING - URL model not loaded
2025-01-25 03:57:19,222 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:19,222 - ERROR - Error checking URL: 
2025-01-25 03:57:19,384 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:19,384 - ERROR - Error checking URL: 
2025-01-25 03:57:20,133 - WARNING - URL model not loaded
2025-01-25 03:57:20,134 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:20,134 - ERROR - Error checking URL: 
2025-01-25 03:57:21,062 - WARNING - URL model not loaded
2025-01-25 03:57:21,062 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:21,063 - ERROR - Error checking URL: 
2025-01-25 03:57:21,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:21,352 - ERROR - Error checking URL: 
2025-01-25 03:57:22,347 - WARNING - URL model not loaded
2025-01-25 03:57:22,347 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:22,347 - ERROR - Error checking URL: 
2025-01-25 03:57:23,237 - WARNING - URL model not loaded
2025-01-25 03:57:23,238 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:23,238 - ERROR - Error checking URL: 
2025-01-25 03:57:23,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:23,350 - ERROR - Error checking URL: 
2025-01-25 03:57:24,139 - WARNING - URL model not loaded
2025-01-25 03:57:24,139 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:24,139 - ERROR - Error checking URL: 
2025-01-25 03:57:25,046 - WARNING - URL model not loaded
2025-01-25 03:57:25,046 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:25,046 - ERROR - Error checking URL: 
2025-01-25 03:57:25,360 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:25,361 - ERROR - Error checking URL: 
2025-01-25 03:57:26,270 - WARNING - URL model not loaded
2025-01-25 03:57:26,271 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:26,271 - ERROR - Error checking URL: 
2025-01-25 03:57:27,223 - WARNING - URL model not loaded
2025-01-25 03:57:27,223 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:27,224 - ERROR - Error checking URL: 
2025-01-25 03:57:27,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:27,350 - ERROR - Error checking URL: 
2025-01-25 03:57:28,087 - WARNING - URL model not loaded
2025-01-25 03:57:28,088 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:28,088 - ERROR - Error checking URL: 
2025-01-25 03:57:28,967 - WARNING - URL model not loaded
2025-01-25 03:57:28,967 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:28,968 - ERROR - Error checking URL: 
2025-01-25 03:57:29,357 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:29,357 - ERROR - Error checking URL: 
2025-01-25 03:57:30,239 - WARNING - URL model not loaded
2025-01-25 03:57:30,239 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:30,240 - ERROR - Error checking URL: 
2025-01-25 03:57:31,040 - WARNING - URL model not loaded
2025-01-25 03:57:31,040 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:31,040 - ERROR - Error checking URL: 
2025-01-25 03:57:31,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:31,349 - ERROR - Error checking URL: 
2025-01-25 03:57:32,136 - WARNING - URL model not loaded
2025-01-25 03:57:32,136 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:32,137 - ERROR - Error checking URL: 
2025-01-25 03:57:32,954 - WARNING - URL model not loaded
2025-01-25 03:57:32,955 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:32,955 - ERROR - Error checking URL: 
2025-01-25 03:57:33,759 - WARNING - URL model not loaded
2025-01-25 03:57:33,759 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:33,759 - ERROR - Error checking URL: 
2025-01-25 03:57:34,576 - WARNING - URL model not loaded
2025-01-25 03:57:34,576 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:34,577 - ERROR - Error checking URL: 
2025-01-25 03:57:35,377 - WARNING - URL model not loaded
2025-01-25 03:57:35,378 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:35,379 - ERROR - Error checking URL: 
2025-01-25 03:57:36,201 - WARNING - URL model not loaded
2025-01-25 03:57:36,202 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:36,202 - ERROR - Error checking URL: 
2025-01-25 03:57:37,011 - WARNING - URL model not loaded
2025-01-25 03:57:37,011 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:37,011 - ERROR - Error checking URL: 
2025-01-25 03:57:37,822 - WARNING - URL model not loaded
2025-01-25 03:57:37,822 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:37,823 - ERROR - Error checking URL: 
2025-01-25 03:57:38,630 - WARNING - URL model not loaded
2025-01-25 03:57:38,630 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:38,630 - ERROR - Error checking URL: 
2025-01-25 03:57:39,445 - WARNING - URL model not loaded
2025-01-25 03:57:39,445 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:39,446 - ERROR - Error checking URL: 
2025-01-25 03:57:40,277 - WARNING - URL model not loaded
2025-01-25 03:57:40,278 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:40,278 - ERROR - Error checking URL: 
2025-01-25 03:57:41,082 - WARNING - URL model not loaded
2025-01-25 03:57:41,083 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:41,083 - ERROR - Error checking URL: 
2025-01-25 03:57:41,929 - WARNING - URL model not loaded
2025-01-25 03:57:41,929 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:41,930 - ERROR - Error checking URL: 
2025-01-25 03:57:42,801 - WARNING - URL model not loaded
2025-01-25 03:57:42,803 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:42,804 - ERROR - Error checking URL: 
2025-01-25 03:57:43,659 - WARNING - URL model not loaded
2025-01-25 03:57:43,660 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:43,660 - ERROR - Error checking URL: 
2025-01-25 03:57:44,471 - WARNING - URL model not loaded
2025-01-25 03:57:44,471 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:44,472 - ERROR - Error checking URL: 
2025-01-25 03:57:45,280 - WARNING - URL model not loaded
2025-01-25 03:57:45,280 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:45,281 - ERROR - Error checking URL: 
2025-01-25 03:57:46,143 - WARNING - URL model not loaded
2025-01-25 03:57:46,143 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:46,143 - ERROR - Error checking URL: 
2025-01-25 03:57:46,978 - WARNING - URL model not loaded
2025-01-25 03:57:46,978 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:46,979 - ERROR - Error checking URL: 
2025-01-25 03:57:47,804 - WARNING - URL model not loaded
2025-01-25 03:57:47,805 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:47,805 - ERROR - Error checking URL: 
2025-01-25 03:57:48,624 - WARNING - URL model not loaded
2025-01-25 03:57:48,625 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:48,625 - ERROR - Error checking URL: 
2025-01-25 03:57:49,482 - WARNING - URL model not loaded
2025-01-25 03:57:49,482 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:49,482 - ERROR - Error checking URL: 
2025-01-25 03:57:50,318 - WARNING - URL model not loaded
2025-01-25 03:57:50,318 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:50,318 - ERROR - Error checking URL: 
2025-01-25 03:57:51,100 - WARNING - URL model not loaded
2025-01-25 03:57:51,101 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:51,101 - ERROR - Error checking URL: 
2025-01-25 03:57:51,910 - WARNING - URL model not loaded
2025-01-25 03:57:51,910 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:51,911 - ERROR - Error checking URL: 
2025-01-25 03:57:52,716 - WARNING - URL model not loaded
2025-01-25 03:57:52,717 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:52,717 - ERROR - Error checking URL: 
2025-01-25 03:57:53,517 - WARNING - URL model not loaded
2025-01-25 03:57:53,518 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:53,518 - ERROR - Error checking URL: 
2025-01-25 03:57:54,331 - WARNING - URL model not loaded
2025-01-25 03:57:54,331 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:54,331 - ERROR - Error checking URL: 
2025-01-25 03:57:55,131 - WARNING - URL model not loaded
2025-01-25 03:57:55,132 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:55,132 - ERROR - Error checking URL: 
2025-01-25 03:57:55,925 - WARNING - URL model not loaded
2025-01-25 03:57:55,925 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:55,925 - ERROR - Error checking URL: 
2025-01-25 03:57:56,748 - WARNING - URL model not loaded
2025-01-25 03:57:56,748 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:56,749 - ERROR - Error checking URL: 
2025-01-25 03:57:57,558 - WARNING - URL model not loaded
2025-01-25 03:57:57,558 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:57,558 - ERROR - Error checking URL: 
2025-01-25 03:57:58,361 - WARNING - URL model not loaded
2025-01-25 03:57:58,361 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:58,362 - ERROR - Error checking URL: 
2025-01-25 03:57:59,155 - WARNING - URL model not loaded
2025-01-25 03:57:59,155 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:59,156 - ERROR - Error checking URL: 
2025-01-25 03:57:59,962 - WARNING - URL model not loaded
2025-01-25 03:57:59,963 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:57:59,963 - ERROR - Error checking URL: 
2025-01-25 03:58:00,779 - WARNING - URL model not loaded
2025-01-25 03:58:00,779 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:00,780 - ERROR - Error checking URL: 
2025-01-25 03:58:01,596 - WARNING - URL model not loaded
2025-01-25 03:58:01,596 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:01,596 - ERROR - Error checking URL: 
2025-01-25 03:58:02,558 - WARNING - URL model not loaded
2025-01-25 03:58:02,559 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:02,559 - ERROR - Error checking URL: 
2025-01-25 03:58:03,432 - WARNING - URL model not loaded
2025-01-25 03:58:03,432 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:03,433 - ERROR - Error checking URL: 
2025-01-25 03:58:04,286 - WARNING - URL model not loaded
2025-01-25 03:58:04,286 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:04,287 - ERROR - Error checking URL: 
2025-01-25 03:58:05,186 - WARNING - URL model not loaded
2025-01-25 03:58:05,186 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:05,186 - ERROR - Error checking URL: 
2025-01-25 03:58:06,022 - WARNING - URL model not loaded
2025-01-25 03:58:06,023 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:06,023 - ERROR - Error checking URL: 
2025-01-25 03:58:06,993 - WARNING - URL model not loaded
2025-01-25 03:58:06,993 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:06,994 - ERROR - Error checking URL: 
2025-01-25 03:58:07,802 - WARNING - URL model not loaded
2025-01-25 03:58:07,802 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:07,802 - ERROR - Error checking URL: 
2025-01-25 03:58:08,592 - WARNING - URL model not loaded
2025-01-25 03:58:08,593 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:08,593 - ERROR - Error checking URL: 
2025-01-25 03:58:09,395 - WARNING - URL model not loaded
2025-01-25 03:58:09,395 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:09,395 - ERROR - Error checking URL: 
2025-01-25 03:58:10,107 - WARNING - URL model not loaded
2025-01-25 03:58:10,108 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:10,108 - ERROR - Error checking URL: 
2025-01-25 03:58:10,922 - WARNING - URL model not loaded
2025-01-25 03:58:10,922 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:10,923 - ERROR - Error checking URL: 
2025-01-25 03:58:11,763 - WARNING - URL model not loaded
2025-01-25 03:58:11,763 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:11,763 - ERROR - Error checking URL: 
2025-01-25 03:58:12,577 - WARNING - URL model not loaded
2025-01-25 03:58:12,578 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:12,578 - ERROR - Error checking URL: 
2025-01-25 03:58:13,381 - WARNING - URL model not loaded
2025-01-25 03:58:13,381 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:13,381 - ERROR - Error checking URL: 
2025-01-25 03:58:14,176 - WARNING - URL model not loaded
2025-01-25 03:58:14,176 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:14,177 - ERROR - Error checking URL: 
2025-01-25 03:58:14,980 - WARNING - URL model not loaded
2025-01-25 03:58:14,981 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:14,982 - ERROR - Error checking URL: 
2025-01-25 03:58:15,800 - WARNING - URL model not loaded
2025-01-25 03:58:15,801 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:15,801 - ERROR - Error checking URL: 
2025-01-25 03:58:16,656 - WARNING - URL model not loaded
2025-01-25 03:58:16,657 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:16,657 - ERROR - Error checking URL: 
2025-01-25 03:58:17,486 - WARNING - URL model not loaded
2025-01-25 03:58:17,486 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:17,486 - ERROR - Error checking URL: 
2025-01-25 03:58:18,284 - WARNING - URL model not loaded
2025-01-25 03:58:18,284 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:18,285 - ERROR - Error checking URL: 
2025-01-25 03:58:19,081 - WARNING - URL model not loaded
2025-01-25 03:58:19,081 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:19,082 - ERROR - Error checking URL: 
2025-01-25 03:58:19,932 - WARNING - URL model not loaded
2025-01-25 03:58:19,933 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:19,933 - ERROR - Error checking URL: 
2025-01-25 03:58:20,754 - WARNING - URL model not loaded
2025-01-25 03:58:20,754 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:20,755 - ERROR - Error checking URL: 
2025-01-25 03:58:21,564 - WARNING - URL model not loaded
2025-01-25 03:58:21,565 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:21,565 - ERROR - Error checking URL: 
2025-01-25 03:58:22,362 - WARNING - URL model not loaded
2025-01-25 03:58:22,362 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:22,363 - ERROR - Error checking URL: 
2025-01-25 03:58:23,172 - WARNING - URL model not loaded
2025-01-25 03:58:23,172 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:23,173 - ERROR - Error checking URL: 
2025-01-25 03:58:23,976 - WARNING - URL model not loaded
2025-01-25 03:58:23,976 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:23,976 - ERROR - Error checking URL: 
2025-01-25 03:58:24,826 - WARNING - URL model not loaded
2025-01-25 03:58:24,826 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:24,826 - ERROR - Error checking URL: 
2025-01-25 03:58:25,653 - WARNING - URL model not loaded
2025-01-25 03:58:25,654 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:25,654 - ERROR - Error checking URL: 
2025-01-25 03:58:26,499 - WARNING - URL model not loaded
2025-01-25 03:58:26,499 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:26,500 - ERROR - Error checking URL: 
2025-01-25 03:58:27,358 - WARNING - URL model not loaded
2025-01-25 03:58:27,358 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:27,358 - ERROR - Error checking URL: 
2025-01-25 03:58:28,163 - WARNING - URL model not loaded
2025-01-25 03:58:28,164 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:28,164 - ERROR - Error checking URL: 
2025-01-25 03:58:28,945 - WARNING - URL model not loaded
2025-01-25 03:58:28,945 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:28,946 - ERROR - Error checking URL: 
2025-01-25 03:58:29,734 - WARNING - URL model not loaded
2025-01-25 03:58:29,734 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:29,735 - ERROR - Error checking URL: 
2025-01-25 03:58:30,550 - WARNING - URL model not loaded
2025-01-25 03:58:30,551 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:30,551 - ERROR - Error checking URL: 
2025-01-25 03:58:31,362 - WARNING - URL model not loaded
2025-01-25 03:58:31,363 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:31,363 - ERROR - Error checking URL: 
2025-01-25 03:58:32,173 - WARNING - URL model not loaded
2025-01-25 03:58:32,174 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:32,174 - ERROR - Error checking URL: 
2025-01-25 03:58:32,977 - WARNING - URL model not loaded
2025-01-25 03:58:32,978 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:32,978 - ERROR - Error checking URL: 
2025-01-25 03:58:33,771 - WARNING - URL model not loaded
2025-01-25 03:58:33,772 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:33,772 - ERROR - Error checking URL: 
2025-01-25 03:58:34,570 - WARNING - URL model not loaded
2025-01-25 03:58:34,571 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:34,571 - ERROR - Error checking URL: 
2025-01-25 03:58:35,378 - WARNING - URL model not loaded
2025-01-25 03:58:35,379 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:35,379 - ERROR - Error checking URL: 
2025-01-25 03:58:36,185 - WARNING - URL model not loaded
2025-01-25 03:58:36,185 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:36,185 - ERROR - Error checking URL: 
2025-01-25 03:58:37,028 - WARNING - URL model not loaded
2025-01-25 03:58:37,029 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:37,029 - ERROR - Error checking URL: 
2025-01-25 03:58:37,844 - WARNING - URL model not loaded
2025-01-25 03:58:37,845 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:37,845 - ERROR - Error checking URL: 
2025-01-25 03:58:38,687 - WARNING - URL model not loaded
2025-01-25 03:58:38,688 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:38,688 - ERROR - Error checking URL: 
2025-01-25 03:58:39,510 - WARNING - URL model not loaded
2025-01-25 03:58:39,511 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:39,511 - ERROR - Error checking URL: 
2025-01-25 03:58:40,317 - WARNING - URL model not loaded
2025-01-25 03:58:40,317 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:40,317 - ERROR - Error checking URL: 
2025-01-25 03:58:41,150 - WARNING - URL model not loaded
2025-01-25 03:58:41,150 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:41,150 - ERROR - Error checking URL: 
2025-01-25 03:58:41,969 - WARNING - URL model not loaded
2025-01-25 03:58:41,970 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:41,970 - ERROR - Error checking URL: 
2025-01-25 03:58:42,803 - WARNING - URL model not loaded
2025-01-25 03:58:42,804 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:42,805 - ERROR - Error checking URL: 
2025-01-25 03:58:43,621 - WARNING - URL model not loaded
2025-01-25 03:58:43,621 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:43,622 - ERROR - Error checking URL: 
2025-01-25 03:58:44,442 - WARNING - URL model not loaded
2025-01-25 03:58:44,443 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:44,443 - ERROR - Error checking URL: 
2025-01-25 03:58:45,272 - WARNING - URL model not loaded
2025-01-25 03:58:45,273 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:45,273 - ERROR - Error checking URL: 
2025-01-25 03:58:46,095 - WARNING - URL model not loaded
2025-01-25 03:58:46,095 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:46,096 - ERROR - Error checking URL: 
2025-01-25 03:58:46,383 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:46,384 - ERROR - Error checking URL: 
2025-01-25 03:58:47,186 - WARNING - URL model not loaded
2025-01-25 03:58:47,186 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:47,187 - ERROR - Error checking URL: 
2025-01-25 03:58:47,988 - WARNING - URL model not loaded
2025-01-25 03:58:47,989 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:47,989 - ERROR - Error checking URL: 
2025-01-25 03:58:48,764 - WARNING - URL model not loaded
2025-01-25 03:58:48,764 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:48,764 - ERROR - Error checking URL: 
2025-01-25 03:58:49,570 - WARNING - URL model not loaded
2025-01-25 03:58:49,570 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:49,570 - ERROR - Error checking URL: 
2025-01-25 03:58:50,378 - WARNING - URL model not loaded
2025-01-25 03:58:50,378 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:50,379 - ERROR - Error checking URL: 
2025-01-25 03:58:51,194 - WARNING - URL model not loaded
2025-01-25 03:58:51,195 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:51,195 - ERROR - Error checking URL: 
2025-01-25 03:58:51,998 - WARNING - URL model not loaded
2025-01-25 03:58:51,999 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:51,999 - ERROR - Error checking URL: 
2025-01-25 03:58:52,802 - WARNING - URL model not loaded
2025-01-25 03:58:52,803 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:52,803 - ERROR - Error checking URL: 
2025-01-25 03:58:53,611 - WARNING - URL model not loaded
2025-01-25 03:58:53,611 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:53,611 - ERROR - Error checking URL: 
2025-01-25 03:58:54,422 - WARNING - URL model not loaded
2025-01-25 03:58:54,423 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:54,423 - ERROR - Error checking URL: 
2025-01-25 03:58:55,238 - WARNING - URL model not loaded
2025-01-25 03:58:55,238 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:55,238 - ERROR - Error checking URL: 
2025-01-25 03:58:56,030 - WARNING - URL model not loaded
2025-01-25 03:58:56,030 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:56,031 - ERROR - Error checking URL: 
2025-01-25 03:58:56,833 - WARNING - URL model not loaded
2025-01-25 03:58:56,833 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:56,834 - ERROR - Error checking URL: 
2025-01-25 03:58:57,627 - WARNING - URL model not loaded
2025-01-25 03:58:57,627 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:57,627 - ERROR - Error checking URL: 
2025-01-25 03:58:58,446 - WARNING - URL model not loaded
2025-01-25 03:58:58,446 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:58,446 - ERROR - Error checking URL: 
2025-01-25 03:58:59,253 - WARNING - URL model not loaded
2025-01-25 03:58:59,253 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:58:59,254 - ERROR - Error checking URL: 
2025-01-25 03:59:00,056 - WARNING - URL model not loaded
2025-01-25 03:59:00,056 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:00,057 - ERROR - Error checking URL: 
2025-01-25 03:59:00,847 - WARNING - URL model not loaded
2025-01-25 03:59:00,848 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:00,848 - ERROR - Error checking URL: 
2025-01-25 03:59:01,663 - WARNING - URL model not loaded
2025-01-25 03:59:01,663 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:01,664 - ERROR - Error checking URL: 
2025-01-25 03:59:02,482 - WARNING - URL model not loaded
2025-01-25 03:59:02,482 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:02,482 - ERROR - Error checking URL: 
2025-01-25 03:59:03,351 - WARNING - URL model not loaded
2025-01-25 03:59:03,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:03,352 - ERROR - Error checking URL: 
2025-01-25 03:59:04,290 - WARNING - URL model not loaded
2025-01-25 03:59:04,290 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:04,290 - ERROR - Error checking URL: 
2025-01-25 03:59:05,091 - WARNING - URL model not loaded
2025-01-25 03:59:05,091 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:05,092 - ERROR - Error checking URL: 
2025-01-25 03:59:05,911 - WARNING - URL model not loaded
2025-01-25 03:59:05,911 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:05,911 - ERROR - Error checking URL: 
2025-01-25 03:59:06,719 - WARNING - URL model not loaded
2025-01-25 03:59:06,719 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:06,720 - ERROR - Error checking URL: 
2025-01-25 03:59:07,519 - WARNING - URL model not loaded
2025-01-25 03:59:07,519 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:07,519 - ERROR - Error checking URL: 
2025-01-25 03:59:08,352 - WARNING - URL model not loaded
2025-01-25 03:59:08,353 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:08,353 - ERROR - Error checking URL: 
2025-01-25 03:59:09,162 - WARNING - URL model not loaded
2025-01-25 03:59:09,162 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:09,163 - ERROR - Error checking URL: 
2025-01-25 03:59:09,981 - WARNING - URL model not loaded
2025-01-25 03:59:09,981 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:09,982 - ERROR - Error checking URL: 
2025-01-25 03:59:10,782 - WARNING - URL model not loaded
2025-01-25 03:59:10,783 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:10,783 - ERROR - Error checking URL: 
2025-01-25 03:59:11,608 - WARNING - URL model not loaded
2025-01-25 03:59:11,609 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:11,609 - ERROR - Error checking URL: 
2025-01-25 03:59:12,411 - WARNING - URL model not loaded
2025-01-25 03:59:12,411 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:12,411 - ERROR - Error checking URL: 
2025-01-25 03:59:13,226 - WARNING - URL model not loaded
2025-01-25 03:59:13,227 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:13,227 - ERROR - Error checking URL: 
2025-01-25 03:59:13,997 - WARNING - URL model not loaded
2025-01-25 03:59:13,998 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:13,998 - ERROR - Error checking URL: 
2025-01-25 03:59:14,798 - WARNING - URL model not loaded
2025-01-25 03:59:14,798 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:14,799 - ERROR - Error checking URL: 
2025-01-25 03:59:15,608 - WARNING - URL model not loaded
2025-01-25 03:59:15,608 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:15,609 - ERROR - Error checking URL: 
2025-01-25 03:59:16,413 - WARNING - URL model not loaded
2025-01-25 03:59:16,413 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:16,413 - ERROR - Error checking URL: 
2025-01-25 03:59:17,201 - WARNING - URL model not loaded
2025-01-25 03:59:17,202 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:17,202 - ERROR - Error checking URL: 
2025-01-25 03:59:18,004 - WARNING - URL model not loaded
2025-01-25 03:59:18,004 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:18,004 - ERROR - Error checking URL: 
2025-01-25 03:59:18,809 - WARNING - URL model not loaded
2025-01-25 03:59:18,810 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:18,810 - ERROR - Error checking URL: 
2025-01-25 03:59:19,592 - WARNING - URL model not loaded
2025-01-25 03:59:19,593 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:19,593 - ERROR - Error checking URL: 
2025-01-25 03:59:20,418 - WARNING - URL model not loaded
2025-01-25 03:59:20,418 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:20,418 - ERROR - Error checking URL: 
2025-01-25 03:59:21,226 - WARNING - URL model not loaded
2025-01-25 03:59:21,227 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:21,227 - ERROR - Error checking URL: 
2025-01-25 03:59:22,109 - WARNING - URL model not loaded
2025-01-25 03:59:22,110 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:22,110 - ERROR - Error checking URL: 
2025-01-25 03:59:22,922 - WARNING - URL model not loaded
2025-01-25 03:59:22,923 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:22,923 - ERROR - Error checking URL: 
2025-01-25 03:59:23,745 - WARNING - URL model not loaded
2025-01-25 03:59:23,746 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:23,747 - ERROR - Error checking URL: 
2025-01-25 03:59:24,590 - WARNING - URL model not loaded
2025-01-25 03:59:24,591 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:24,591 - ERROR - Error checking URL: 
2025-01-25 03:59:25,470 - WARNING - URL model not loaded
2025-01-25 03:59:25,471 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:25,471 - ERROR - Error checking URL: 
2025-01-25 03:59:26,350 - WARNING - URL model not loaded
2025-01-25 03:59:26,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:26,351 - ERROR - Error checking URL: 
2025-01-25 03:59:27,234 - WARNING - URL model not loaded
2025-01-25 03:59:27,234 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:27,235 - ERROR - Error checking URL: 
2025-01-25 03:59:28,099 - WARNING - URL model not loaded
2025-01-25 03:59:28,100 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:28,100 - ERROR - Error checking URL: 
2025-01-25 03:59:29,013 - WARNING - URL model not loaded
2025-01-25 03:59:29,014 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:29,014 - ERROR - Error checking URL: 
2025-01-25 03:59:29,874 - WARNING - URL model not loaded
2025-01-25 03:59:29,875 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:29,875 - ERROR - Error checking URL: 
2025-01-25 03:59:30,800 - WARNING - URL model not loaded
2025-01-25 03:59:30,801 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:30,801 - ERROR - Error checking URL: 
2025-01-25 03:59:31,698 - WARNING - URL model not loaded
2025-01-25 03:59:31,698 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:31,699 - ERROR - Error checking URL: 
2025-01-25 03:59:32,624 - WARNING - URL model not loaded
2025-01-25 03:59:32,625 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:32,625 - ERROR - Error checking URL: 
2025-01-25 03:59:33,529 - WARNING - URL model not loaded
2025-01-25 03:59:33,529 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:33,529 - ERROR - Error checking URL: 
2025-01-25 03:59:34,412 - WARNING - URL model not loaded
2025-01-25 03:59:34,412 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:34,413 - ERROR - Error checking URL: 
2025-01-25 03:59:35,288 - WARNING - URL model not loaded
2025-01-25 03:59:35,289 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:35,289 - ERROR - Error checking URL: 
2025-01-25 03:59:36,148 - WARNING - URL model not loaded
2025-01-25 03:59:36,148 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:36,149 - ERROR - Error checking URL: 
2025-01-25 03:59:37,000 - WARNING - URL model not loaded
2025-01-25 03:59:37,000 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:37,001 - ERROR - Error checking URL: 
2025-01-25 03:59:37,870 - WARNING - URL model not loaded
2025-01-25 03:59:37,870 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:37,870 - ERROR - Error checking URL: 
2025-01-25 03:59:38,768 - WARNING - URL model not loaded
2025-01-25 03:59:38,768 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:38,769 - ERROR - Error checking URL: 
2025-01-25 03:59:39,631 - WARNING - URL model not loaded
2025-01-25 03:59:39,631 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:39,631 - ERROR - Error checking URL: 
2025-01-25 03:59:40,518 - WARNING - URL model not loaded
2025-01-25 03:59:40,519 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:40,519 - ERROR - Error checking URL: 
2025-01-25 03:59:41,413 - WARNING - URL model not loaded
2025-01-25 03:59:41,414 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:41,414 - ERROR - Error checking URL: 
2025-01-25 03:59:42,288 - WARNING - URL model not loaded
2025-01-25 03:59:42,288 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:42,289 - ERROR - Error checking URL: 
2025-01-25 03:59:43,193 - WARNING - URL model not loaded
2025-01-25 03:59:43,194 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:43,194 - ERROR - Error checking URL: 
2025-01-25 03:59:44,066 - WARNING - URL model not loaded
2025-01-25 03:59:44,066 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:44,067 - ERROR - Error checking URL: 
2025-01-25 03:59:44,926 - WARNING - URL model not loaded
2025-01-25 03:59:44,926 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:44,926 - ERROR - Error checking URL: 
2025-01-25 03:59:46,048 - WARNING - URL model not loaded
2025-01-25 03:59:46,049 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:46,049 - ERROR - Error checking URL: 
2025-01-25 03:59:46,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:46,352 - ERROR - Error checking URL: 
2025-01-25 03:59:46,961 - WARNING - URL model not loaded
2025-01-25 03:59:46,961 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:46,961 - ERROR - Error checking URL: 
2025-01-25 03:59:47,845 - WARNING - URL model not loaded
2025-01-25 03:59:47,845 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:47,846 - ERROR - Error checking URL: 
2025-01-25 03:59:48,722 - WARNING - URL model not loaded
2025-01-25 03:59:48,722 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:48,722 - ERROR - Error checking URL: 
2025-01-25 03:59:49,607 - WARNING - URL model not loaded
2025-01-25 03:59:49,607 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:49,608 - ERROR - Error checking URL: 
2025-01-25 03:59:50,482 - WARNING - URL model not loaded
2025-01-25 03:59:50,483 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:50,483 - ERROR - Error checking URL: 
2025-01-25 03:59:51,359 - WARNING - URL model not loaded
2025-01-25 03:59:51,360 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:51,360 - ERROR - Error checking URL: 
2025-01-25 03:59:52,253 - WARNING - URL model not loaded
2025-01-25 03:59:52,254 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:52,254 - ERROR - Error checking URL: 
2025-01-25 03:59:53,116 - WARNING - URL model not loaded
2025-01-25 03:59:53,116 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:53,116 - ERROR - Error checking URL: 
2025-01-25 03:59:54,025 - WARNING - URL model not loaded
2025-01-25 03:59:54,025 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:54,026 - ERROR - Error checking URL: 
2025-01-25 03:59:54,876 - WARNING - URL model not loaded
2025-01-25 03:59:54,877 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:54,877 - ERROR - Error checking URL: 
2025-01-25 03:59:55,734 - WARNING - URL model not loaded
2025-01-25 03:59:55,735 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:55,735 - ERROR - Error checking URL: 
2025-01-25 03:59:56,610 - WARNING - URL model not loaded
2025-01-25 03:59:56,610 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:56,611 - ERROR - Error checking URL: 
2025-01-25 03:59:57,471 - WARNING - URL model not loaded
2025-01-25 03:59:57,472 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:57,472 - ERROR - Error checking URL: 
2025-01-25 03:59:58,346 - WARNING - URL model not loaded
2025-01-25 03:59:58,346 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:58,347 - ERROR - Error checking URL: 
2025-01-25 03:59:59,194 - WARNING - URL model not loaded
2025-01-25 03:59:59,195 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 03:59:59,195 - ERROR - Error checking URL: 
2025-01-25 04:00:00,049 - WARNING - URL model not loaded
2025-01-25 04:00:00,050 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:00,050 - ERROR - Error checking URL: 
2025-01-25 04:00:00,938 - WARNING - URL model not loaded
2025-01-25 04:00:00,938 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:00,938 - ERROR - Error checking URL: 
2025-01-25 04:00:01,811 - WARNING - URL model not loaded
2025-01-25 04:00:01,812 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:01,812 - ERROR - Error checking URL: 
2025-01-25 04:00:02,710 - WARNING - URL model not loaded
2025-01-25 04:00:02,710 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:02,711 - ERROR - Error checking URL: 
2025-01-25 04:00:03,573 - WARNING - URL model not loaded
2025-01-25 04:00:03,573 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:03,574 - ERROR - Error checking URL: 
2025-01-25 04:00:04,463 - WARNING - URL model not loaded
2025-01-25 04:00:04,463 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:04,464 - ERROR - Error checking URL: 
2025-01-25 04:00:05,358 - WARNING - URL model not loaded
2025-01-25 04:00:05,359 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:05,359 - ERROR - Error checking URL: 
2025-01-25 04:00:06,216 - WARNING - URL model not loaded
2025-01-25 04:00:06,217 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:06,217 - ERROR - Error checking URL: 
2025-01-25 04:00:07,097 - WARNING - URL model not loaded
2025-01-25 04:00:07,098 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:07,098 - ERROR - Error checking URL: 
2025-01-25 04:00:08,005 - WARNING - URL model not loaded
2025-01-25 04:00:08,006 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:08,006 - ERROR - Error checking URL: 
2025-01-25 04:00:08,870 - WARNING - URL model not loaded
2025-01-25 04:00:08,870 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:08,870 - ERROR - Error checking URL: 
2025-01-25 04:00:09,764 - WARNING - URL model not loaded
2025-01-25 04:00:09,765 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:09,772 - ERROR - Error checking URL: 
2025-01-25 04:00:10,640 - WARNING - URL model not loaded
2025-01-25 04:00:10,640 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:10,640 - ERROR - Error checking URL: 
2025-01-25 04:00:11,510 - WARNING - URL model not loaded
2025-01-25 04:00:11,510 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:11,510 - ERROR - Error checking URL: 
2025-01-25 04:00:12,384 - WARNING - URL model not loaded
2025-01-25 04:00:12,385 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:12,385 - ERROR - Error checking URL: 
2025-01-25 04:00:13,282 - WARNING - URL model not loaded
2025-01-25 04:00:13,283 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:13,284 - ERROR - Error checking URL: 
2025-01-25 04:00:14,176 - WARNING - URL model not loaded
2025-01-25 04:00:14,177 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:14,177 - ERROR - Error checking URL: 
2025-01-25 04:00:15,078 - WARNING - URL model not loaded
2025-01-25 04:00:15,079 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:15,079 - ERROR - Error checking URL: 
2025-01-25 04:00:15,978 - WARNING - URL model not loaded
2025-01-25 04:00:15,978 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:15,979 - ERROR - Error checking URL: 
2025-01-25 04:00:16,882 - WARNING - URL model not loaded
2025-01-25 04:00:16,882 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:16,883 - ERROR - Error checking URL: 
2025-01-25 04:00:17,781 - WARNING - URL model not loaded
2025-01-25 04:00:17,782 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:17,782 - ERROR - Error checking URL: 
2025-01-25 04:00:18,683 - WARNING - URL model not loaded
2025-01-25 04:00:18,684 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:18,684 - ERROR - Error checking URL: 
2025-01-25 04:00:19,575 - WARNING - URL model not loaded
2025-01-25 04:00:19,575 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:19,575 - ERROR - Error checking URL: 
2025-01-25 04:00:20,472 - WARNING - URL model not loaded
2025-01-25 04:00:20,473 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:20,473 - ERROR - Error checking URL: 
2025-01-25 04:00:21,361 - WARNING - URL model not loaded
2025-01-25 04:00:21,362 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:21,362 - ERROR - Error checking URL: 
2025-01-25 04:00:22,259 - WARNING - URL model not loaded
2025-01-25 04:00:22,259 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:22,259 - ERROR - Error checking URL: 
2025-01-25 04:00:23,137 - WARNING - URL model not loaded
2025-01-25 04:00:23,138 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:23,138 - ERROR - Error checking URL: 
2025-01-25 04:00:24,003 - WARNING - URL model not loaded
2025-01-25 04:00:24,004 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:24,004 - ERROR - Error checking URL: 
2025-01-25 04:00:24,874 - WARNING - URL model not loaded
2025-01-25 04:00:24,875 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:24,875 - ERROR - Error checking URL: 
2025-01-25 04:00:25,733 - WARNING - URL model not loaded
2025-01-25 04:00:25,734 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:25,734 - ERROR - Error checking URL: 
2025-01-25 04:00:26,633 - WARNING - URL model not loaded
2025-01-25 04:00:26,633 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:26,634 - ERROR - Error checking URL: 
2025-01-25 04:00:27,533 - WARNING - URL model not loaded
2025-01-25 04:00:27,534 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:27,534 - ERROR - Error checking URL: 
2025-01-25 04:00:28,415 - WARNING - URL model not loaded
2025-01-25 04:00:28,416 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:28,417 - ERROR - Error checking URL: 
2025-01-25 04:00:29,271 - WARNING - URL model not loaded
2025-01-25 04:00:29,272 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:29,272 - ERROR - Error checking URL: 
2025-01-25 04:00:30,129 - WARNING - URL model not loaded
2025-01-25 04:00:30,129 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:30,129 - ERROR - Error checking URL: 
2025-01-25 04:00:31,076 - WARNING - URL model not loaded
2025-01-25 04:00:31,077 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:31,077 - ERROR - Error checking URL: 
2025-01-25 04:00:32,008 - WARNING - URL model not loaded
2025-01-25 04:00:32,009 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:32,009 - ERROR - Error checking URL: 
2025-01-25 04:00:32,914 - WARNING - URL model not loaded
2025-01-25 04:00:32,915 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:32,915 - ERROR - Error checking URL: 
2025-01-25 04:00:33,778 - WARNING - URL model not loaded
2025-01-25 04:00:33,778 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:33,779 - ERROR - Error checking URL: 
2025-01-25 04:00:34,647 - WARNING - URL model not loaded
2025-01-25 04:00:34,647 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:34,647 - ERROR - Error checking URL: 
2025-01-25 04:00:35,561 - WARNING - URL model not loaded
2025-01-25 04:00:35,562 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:35,562 - ERROR - Error checking URL: 
2025-01-25 04:00:36,427 - WARNING - URL model not loaded
2025-01-25 04:00:36,427 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:36,428 - ERROR - Error checking URL: 
2025-01-25 04:00:37,296 - WARNING - URL model not loaded
2025-01-25 04:00:37,296 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:37,296 - ERROR - Error checking URL: 
2025-01-25 04:00:38,167 - WARNING - URL model not loaded
2025-01-25 04:00:38,167 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:38,168 - ERROR - Error checking URL: 
2025-01-25 04:00:39,016 - WARNING - URL model not loaded
2025-01-25 04:00:39,017 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:39,017 - ERROR - Error checking URL: 
2025-01-25 04:00:39,874 - WARNING - URL model not loaded
2025-01-25 04:00:39,874 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:39,875 - ERROR - Error checking URL: 
2025-01-25 04:00:40,759 - WARNING - URL model not loaded
2025-01-25 04:00:40,760 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:40,760 - ERROR - Error checking URL: 
2025-01-25 04:00:41,636 - WARNING - URL model not loaded
2025-01-25 04:00:41,637 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:41,637 - ERROR - Error checking URL: 
2025-01-25 04:00:42,488 - WARNING - URL model not loaded
2025-01-25 04:00:42,488 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:42,488 - ERROR - Error checking URL: 
2025-01-25 04:00:43,345 - WARNING - URL model not loaded
2025-01-25 04:00:43,346 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:43,347 - ERROR - Error checking URL: 
2025-01-25 04:00:44,248 - WARNING - URL model not loaded
2025-01-25 04:00:44,249 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:44,249 - ERROR - Error checking URL: 
2025-01-25 04:00:45,117 - WARNING - URL model not loaded
2025-01-25 04:00:45,118 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:45,118 - ERROR - Error checking URL: 
2025-01-25 04:00:45,986 - WARNING - URL model not loaded
2025-01-25 04:00:45,987 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:45,987 - ERROR - Error checking URL: 
2025-01-25 04:00:46,354 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:46,354 - ERROR - Error checking URL: 
2025-01-25 04:00:47,245 - WARNING - URL model not loaded
2025-01-25 04:00:47,246 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:47,246 - ERROR - Error checking URL: 
2025-01-25 04:00:48,116 - WARNING - URL model not loaded
2025-01-25 04:00:48,116 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:48,116 - ERROR - Error checking URL: 
2025-01-25 04:00:49,004 - WARNING - URL model not loaded
2025-01-25 04:00:49,005 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:49,005 - ERROR - Error checking URL: 
2025-01-25 04:00:49,899 - WARNING - URL model not loaded
2025-01-25 04:00:49,900 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:49,900 - ERROR - Error checking URL: 
2025-01-25 04:00:50,814 - WARNING - URL model not loaded
2025-01-25 04:00:50,815 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:50,815 - ERROR - Error checking URL: 
2025-01-25 04:00:51,662 - WARNING - URL model not loaded
2025-01-25 04:00:51,663 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:51,670 - ERROR - Error checking URL: 
2025-01-25 04:00:52,545 - WARNING - URL model not loaded
2025-01-25 04:00:52,546 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:52,546 - ERROR - Error checking URL: 
2025-01-25 04:00:53,421 - WARNING - URL model not loaded
2025-01-25 04:00:53,421 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:53,421 - ERROR - Error checking URL: 
2025-01-25 04:00:54,305 - WARNING - URL model not loaded
2025-01-25 04:00:54,306 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:54,306 - ERROR - Error checking URL: 
2025-01-25 04:00:55,168 - WARNING - URL model not loaded
2025-01-25 04:00:55,169 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:55,169 - ERROR - Error checking URL: 
2025-01-25 04:00:56,049 - WARNING - URL model not loaded
2025-01-25 04:00:56,049 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:56,050 - ERROR - Error checking URL: 
2025-01-25 04:00:56,906 - WARNING - URL model not loaded
2025-01-25 04:00:56,907 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:56,907 - ERROR - Error checking URL: 
2025-01-25 04:00:57,771 - WARNING - URL model not loaded
2025-01-25 04:00:57,771 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:57,772 - ERROR - Error checking URL: 
2025-01-25 04:00:58,641 - WARNING - URL model not loaded
2025-01-25 04:00:58,641 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:58,642 - ERROR - Error checking URL: 
2025-01-25 04:00:59,496 - WARNING - URL model not loaded
2025-01-25 04:00:59,497 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:00:59,497 - ERROR - Error checking URL: 
2025-01-25 04:01:00,366 - WARNING - URL model not loaded
2025-01-25 04:01:00,366 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:00,366 - ERROR - Error checking URL: 
2025-01-25 04:01:01,217 - WARNING - URL model not loaded
2025-01-25 04:01:01,218 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:01,218 - ERROR - Error checking URL: 
2025-01-25 04:01:02,097 - WARNING - URL model not loaded
2025-01-25 04:01:02,097 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:02,097 - ERROR - Error checking URL: 
2025-01-25 04:01:02,984 - WARNING - URL model not loaded
2025-01-25 04:01:02,985 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:02,986 - ERROR - Error checking URL: 
2025-01-25 04:01:03,849 - WARNING - URL model not loaded
2025-01-25 04:01:03,849 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:03,849 - ERROR - Error checking URL: 
2025-01-25 04:01:04,712 - WARNING - URL model not loaded
2025-01-25 04:01:04,713 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:04,713 - ERROR - Error checking URL: 
2025-01-25 04:01:05,576 - WARNING - URL model not loaded
2025-01-25 04:01:05,577 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:05,577 - ERROR - Error checking URL: 
2025-01-25 04:01:06,471 - WARNING - URL model not loaded
2025-01-25 04:01:06,471 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:06,472 - ERROR - Error checking URL: 
2025-01-25 04:01:07,339 - WARNING - URL model not loaded
2025-01-25 04:01:07,339 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:07,340 - ERROR - Error checking URL: 
2025-01-25 04:01:08,233 - WARNING - URL model not loaded
2025-01-25 04:01:08,233 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:08,234 - ERROR - Error checking URL: 
2025-01-25 04:01:09,109 - WARNING - URL model not loaded
2025-01-25 04:01:09,109 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:09,110 - ERROR - Error checking URL: 
2025-01-25 04:01:09,977 - WARNING - URL model not loaded
2025-01-25 04:01:09,978 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:09,978 - ERROR - Error checking URL: 
2025-01-25 04:01:10,944 - WARNING - URL model not loaded
2025-01-25 04:01:10,944 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:10,944 - ERROR - Error checking URL: 
2025-01-25 04:01:11,827 - WARNING - URL model not loaded
2025-01-25 04:01:11,827 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:11,834 - ERROR - Error checking URL: 
2025-01-25 04:01:12,724 - WARNING - URL model not loaded
2025-01-25 04:01:12,724 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:12,724 - ERROR - Error checking URL: 
2025-01-25 04:01:13,588 - WARNING - URL model not loaded
2025-01-25 04:01:13,588 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:13,588 - ERROR - Error checking URL: 
2025-01-25 04:01:14,468 - WARNING - URL model not loaded
2025-01-25 04:01:14,468 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:14,468 - ERROR - Error checking URL: 
2025-01-25 04:01:15,333 - WARNING - URL model not loaded
2025-01-25 04:01:15,334 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:15,334 - ERROR - Error checking URL: 
2025-01-25 04:01:16,196 - WARNING - URL model not loaded
2025-01-25 04:01:16,197 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:16,197 - ERROR - Error checking URL: 
2025-01-25 04:01:17,079 - WARNING - URL model not loaded
2025-01-25 04:01:17,080 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:17,080 - ERROR - Error checking URL: 
2025-01-25 04:01:17,973 - WARNING - URL model not loaded
2025-01-25 04:01:17,974 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:17,975 - ERROR - Error checking URL: 
2025-01-25 04:01:18,826 - WARNING - URL model not loaded
2025-01-25 04:01:18,826 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:18,827 - ERROR - Error checking URL: 
2025-01-25 04:01:19,677 - WARNING - URL model not loaded
2025-01-25 04:01:19,677 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:19,678 - ERROR - Error checking URL: 
2025-01-25 04:01:20,553 - WARNING - URL model not loaded
2025-01-25 04:01:20,554 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:20,554 - ERROR - Error checking URL: 
2025-01-25 04:01:21,440 - WARNING - URL model not loaded
2025-01-25 04:01:21,440 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:21,441 - ERROR - Error checking URL: 
2025-01-25 04:01:22,290 - WARNING - URL model not loaded
2025-01-25 04:01:22,291 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:22,298 - ERROR - Error checking URL: 
2025-01-25 04:01:23,172 - WARNING - URL model not loaded
2025-01-25 04:01:23,172 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:23,172 - ERROR - Error checking URL: 
2025-01-25 04:01:24,061 - WARNING - URL model not loaded
2025-01-25 04:01:24,062 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:24,062 - ERROR - Error checking URL: 
2025-01-25 04:01:24,951 - WARNING - URL model not loaded
2025-01-25 04:01:24,952 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:24,952 - ERROR - Error checking URL: 
2025-01-25 04:01:25,850 - WARNING - URL model not loaded
2025-01-25 04:01:25,851 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:25,851 - ERROR - Error checking URL: 
2025-01-25 04:01:26,722 - WARNING - URL model not loaded
2025-01-25 04:01:26,722 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:26,722 - ERROR - Error checking URL: 
2025-01-25 04:01:27,602 - WARNING - URL model not loaded
2025-01-25 04:01:27,602 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:27,602 - ERROR - Error checking URL: 
2025-01-25 04:01:28,454 - WARNING - URL model not loaded
2025-01-25 04:01:28,454 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:28,454 - ERROR - Error checking URL: 
2025-01-25 04:01:29,309 - WARNING - URL model not loaded
2025-01-25 04:01:29,309 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:29,310 - ERROR - Error checking URL: 
2025-01-25 04:01:30,191 - WARNING - URL model not loaded
2025-01-25 04:01:30,192 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:30,192 - ERROR - Error checking URL: 
2025-01-25 04:01:31,124 - WARNING - URL model not loaded
2025-01-25 04:01:31,124 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:31,124 - ERROR - Error checking URL: 
2025-01-25 04:01:32,030 - WARNING - URL model not loaded
2025-01-25 04:01:32,030 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:32,030 - ERROR - Error checking URL: 
2025-01-25 04:01:32,872 - WARNING - URL model not loaded
2025-01-25 04:01:32,875 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:32,875 - ERROR - Error checking URL: 
2025-01-25 04:01:33,667 - WARNING - URL model not loaded
2025-01-25 04:01:33,668 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:33,668 - ERROR - Error checking URL: 
2025-01-25 04:01:34,547 - WARNING - URL model not loaded
2025-01-25 04:01:34,548 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:34,548 - ERROR - Error checking URL: 
2025-01-25 04:01:35,447 - WARNING - URL model not loaded
2025-01-25 04:01:35,448 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:35,448 - ERROR - Error checking URL: 
2025-01-25 04:01:36,349 - WARNING - URL model not loaded
2025-01-25 04:01:36,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:36,349 - ERROR - Error checking URL: 
2025-01-25 04:01:37,280 - WARNING - URL model not loaded
2025-01-25 04:01:37,280 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:37,281 - ERROR - Error checking URL: 
2025-01-25 04:01:38,157 - WARNING - URL model not loaded
2025-01-25 04:01:38,158 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:38,158 - ERROR - Error checking URL: 
2025-01-25 04:01:39,019 - WARNING - URL model not loaded
2025-01-25 04:01:39,019 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:39,019 - ERROR - Error checking URL: 
2025-01-25 04:01:39,902 - WARNING - URL model not loaded
2025-01-25 04:01:39,903 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:39,903 - ERROR - Error checking URL: 
2025-01-25 04:01:40,815 - WARNING - URL model not loaded
2025-01-25 04:01:40,816 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:40,816 - ERROR - Error checking URL: 
2025-01-25 04:01:41,698 - WARNING - URL model not loaded
2025-01-25 04:01:41,699 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:41,699 - ERROR - Error checking URL: 
2025-01-25 04:01:42,594 - WARNING - URL model not loaded
2025-01-25 04:01:42,594 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:42,595 - ERROR - Error checking URL: 
2025-01-25 04:01:43,494 - WARNING - URL model not loaded
2025-01-25 04:01:43,494 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:43,494 - ERROR - Error checking URL: 
2025-01-25 04:01:44,371 - WARNING - URL model not loaded
2025-01-25 04:01:44,371 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:44,372 - ERROR - Error checking URL: 
2025-01-25 04:01:45,284 - WARNING - URL model not loaded
2025-01-25 04:01:45,284 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:45,284 - ERROR - Error checking URL: 
2025-01-25 04:01:46,130 - WARNING - URL model not loaded
2025-01-25 04:01:46,130 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:46,131 - ERROR - Error checking URL: 
2025-01-25 04:01:46,354 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:46,354 - ERROR - Error checking URL: 
2025-01-25 04:01:47,006 - WARNING - URL model not loaded
2025-01-25 04:01:47,006 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:47,007 - ERROR - Error checking URL: 
2025-01-25 04:01:47,885 - WARNING - URL model not loaded
2025-01-25 04:01:47,886 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:47,886 - ERROR - Error checking URL: 
2025-01-25 04:01:48,773 - WARNING - URL model not loaded
2025-01-25 04:01:48,774 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:48,774 - ERROR - Error checking URL: 
2025-01-25 04:01:49,666 - WARNING - URL model not loaded
2025-01-25 04:01:49,667 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:49,667 - ERROR - Error checking URL: 
2025-01-25 04:01:50,531 - WARNING - URL model not loaded
2025-01-25 04:01:50,532 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:50,532 - ERROR - Error checking URL: 
2025-01-25 04:01:51,350 - WARNING - URL model not loaded
2025-01-25 04:01:51,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:51,351 - ERROR - Error checking URL: 
2025-01-25 04:01:52,244 - WARNING - URL model not loaded
2025-01-25 04:01:52,244 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:52,244 - ERROR - Error checking URL: 
2025-01-25 04:01:53,239 - WARNING - URL model not loaded
2025-01-25 04:01:53,239 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:53,239 - ERROR - Error checking URL: 
2025-01-25 04:01:54,221 - WARNING - URL model not loaded
2025-01-25 04:01:54,222 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:54,222 - ERROR - Error checking URL: 
2025-01-25 04:01:55,096 - WARNING - URL model not loaded
2025-01-25 04:01:55,097 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:55,097 - ERROR - Error checking URL: 
2025-01-25 04:01:55,990 - WARNING - URL model not loaded
2025-01-25 04:01:55,990 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:55,990 - ERROR - Error checking URL: 
2025-01-25 04:01:56,868 - WARNING - URL model not loaded
2025-01-25 04:01:56,869 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:56,870 - ERROR - Error checking URL: 
2025-01-25 04:01:57,756 - WARNING - URL model not loaded
2025-01-25 04:01:57,756 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:57,757 - ERROR - Error checking URL: 
2025-01-25 04:01:58,618 - WARNING - URL model not loaded
2025-01-25 04:01:58,619 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:58,619 - ERROR - Error checking URL: 
2025-01-25 04:01:59,494 - WARNING - URL model not loaded
2025-01-25 04:01:59,495 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:01:59,495 - ERROR - Error checking URL: 
2025-01-25 04:02:00,358 - WARNING - URL model not loaded
2025-01-25 04:02:00,359 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:00,359 - ERROR - Error checking URL: 
2025-01-25 04:02:01,229 - WARNING - URL model not loaded
2025-01-25 04:02:01,229 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:01,229 - ERROR - Error checking URL: 
2025-01-25 04:02:02,103 - WARNING - URL model not loaded
2025-01-25 04:02:02,103 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:02,103 - ERROR - Error checking URL: 
2025-01-25 04:02:02,981 - WARNING - URL model not loaded
2025-01-25 04:02:02,982 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:02,982 - ERROR - Error checking URL: 
2025-01-25 04:02:03,871 - WARNING - URL model not loaded
2025-01-25 04:02:03,872 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:03,872 - ERROR - Error checking URL: 
2025-01-25 04:02:04,726 - WARNING - URL model not loaded
2025-01-25 04:02:04,726 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:04,727 - ERROR - Error checking URL: 
2025-01-25 04:02:05,605 - WARNING - URL model not loaded
2025-01-25 04:02:05,605 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:05,606 - ERROR - Error checking URL: 
2025-01-25 04:02:06,487 - WARNING - URL model not loaded
2025-01-25 04:02:06,488 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:06,488 - ERROR - Error checking URL: 
2025-01-25 04:02:07,344 - WARNING - URL model not loaded
2025-01-25 04:02:07,344 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:07,345 - ERROR - Error checking URL: 
2025-01-25 04:02:08,204 - WARNING - URL model not loaded
2025-01-25 04:02:08,205 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:08,205 - ERROR - Error checking URL: 
2025-01-25 04:02:09,097 - WARNING - URL model not loaded
2025-01-25 04:02:09,097 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:09,098 - ERROR - Error checking URL: 
2025-01-25 04:02:09,985 - WARNING - URL model not loaded
2025-01-25 04:02:09,985 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:09,985 - ERROR - Error checking URL: 
2025-01-25 04:02:10,835 - WARNING - URL model not loaded
2025-01-25 04:02:10,836 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:10,836 - ERROR - Error checking URL: 
2025-01-25 04:02:11,708 - WARNING - URL model not loaded
2025-01-25 04:02:11,708 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:11,709 - ERROR - Error checking URL: 
2025-01-25 04:02:12,596 - WARNING - URL model not loaded
2025-01-25 04:02:12,596 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:12,596 - ERROR - Error checking URL: 
2025-01-25 04:02:13,464 - WARNING - URL model not loaded
2025-01-25 04:02:13,464 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:13,464 - ERROR - Error checking URL: 
2025-01-25 04:02:14,354 - WARNING - URL model not loaded
2025-01-25 04:02:14,355 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:14,355 - ERROR - Error checking URL: 
2025-01-25 04:02:15,227 - WARNING - URL model not loaded
2025-01-25 04:02:15,227 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:15,228 - ERROR - Error checking URL: 
2025-01-25 04:02:16,098 - WARNING - URL model not loaded
2025-01-25 04:02:16,099 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:16,099 - ERROR - Error checking URL: 
2025-01-25 04:02:16,976 - WARNING - URL model not loaded
2025-01-25 04:02:16,977 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:16,977 - ERROR - Error checking URL: 
2025-01-25 04:02:17,857 - WARNING - URL model not loaded
2025-01-25 04:02:17,857 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:17,857 - ERROR - Error checking URL: 
2025-01-25 04:02:18,733 - WARNING - URL model not loaded
2025-01-25 04:02:18,734 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:18,734 - ERROR - Error checking URL: 
2025-01-25 04:02:19,594 - WARNING - URL model not loaded
2025-01-25 04:02:19,594 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:19,595 - ERROR - Error checking URL: 
2025-01-25 04:02:20,389 - WARNING - URL model not loaded
2025-01-25 04:02:20,389 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:20,389 - ERROR - Error checking URL: 
2025-01-25 04:02:21,232 - WARNING - URL model not loaded
2025-01-25 04:02:21,233 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:21,233 - ERROR - Error checking URL: 
2025-01-25 04:02:22,112 - WARNING - URL model not loaded
2025-01-25 04:02:22,112 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:22,112 - ERROR - Error checking URL: 
2025-01-25 04:02:23,012 - WARNING - URL model not loaded
2025-01-25 04:02:23,012 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:23,012 - ERROR - Error checking URL: 
2025-01-25 04:02:23,908 - WARNING - URL model not loaded
2025-01-25 04:02:23,909 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:23,909 - ERROR - Error checking URL: 
2025-01-25 04:02:24,800 - WARNING - URL model not loaded
2025-01-25 04:02:24,801 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:24,801 - ERROR - Error checking URL: 
2025-01-25 04:02:25,695 - WARNING - URL model not loaded
2025-01-25 04:02:25,696 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:25,696 - ERROR - Error checking URL: 
2025-01-25 04:02:26,536 - WARNING - URL model not loaded
2025-01-25 04:02:26,537 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:26,537 - ERROR - Error checking URL: 
2025-01-25 04:02:27,411 - WARNING - URL model not loaded
2025-01-25 04:02:27,411 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:27,412 - ERROR - Error checking URL: 
2025-01-25 04:02:28,293 - WARNING - URL model not loaded
2025-01-25 04:02:28,294 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:28,294 - ERROR - Error checking URL: 
2025-01-25 04:02:29,155 - WARNING - URL model not loaded
2025-01-25 04:02:29,156 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:29,156 - ERROR - Error checking URL: 
2025-01-25 04:02:30,028 - WARNING - URL model not loaded
2025-01-25 04:02:30,029 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:30,029 - ERROR - Error checking URL: 
2025-01-25 04:02:30,886 - WARNING - URL model not loaded
2025-01-25 04:02:30,886 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:30,887 - ERROR - Error checking URL: 
2025-01-25 04:02:31,789 - WARNING - URL model not loaded
2025-01-25 04:02:31,790 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:31,790 - ERROR - Error checking URL: 
2025-01-25 04:02:32,664 - WARNING - URL model not loaded
2025-01-25 04:02:32,665 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:32,665 - ERROR - Error checking URL: 
2025-01-25 04:02:33,564 - WARNING - URL model not loaded
2025-01-25 04:02:33,564 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:33,564 - ERROR - Error checking URL: 
2025-01-25 04:02:34,433 - WARNING - URL model not loaded
2025-01-25 04:02:34,433 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:34,434 - ERROR - Error checking URL: 
2025-01-25 04:02:35,395 - WARNING - URL model not loaded
2025-01-25 04:02:35,396 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:35,396 - ERROR - Error checking URL: 
2025-01-25 04:02:36,324 - WARNING - URL model not loaded
2025-01-25 04:02:36,324 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:36,324 - ERROR - Error checking URL: 
2025-01-25 04:02:38,039 - WARNING - URL model not loaded
2025-01-25 04:02:38,040 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:38,040 - ERROR - Error checking URL: 
2025-01-25 04:02:38,349 - WARNING - URL model not loaded
2025-01-25 04:02:38,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:38,350 - ERROR - Error checking URL: 
2025-01-25 04:02:39,104 - WARNING - URL model not loaded
2025-01-25 04:02:39,105 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:39,105 - ERROR - Error checking URL: 
2025-01-25 04:02:39,948 - WARNING - URL model not loaded
2025-01-25 04:02:39,948 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:39,949 - ERROR - Error checking URL: 
2025-01-25 04:02:40,764 - WARNING - URL model not loaded
2025-01-25 04:02:40,765 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:40,765 - ERROR - Error checking URL: 
2025-01-25 04:02:41,642 - WARNING - URL model not loaded
2025-01-25 04:02:41,642 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:41,643 - ERROR - Error checking URL: 
2025-01-25 04:02:42,531 - WARNING - URL model not loaded
2025-01-25 04:02:42,531 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:42,532 - ERROR - Error checking URL: 
2025-01-25 04:02:43,405 - WARNING - URL model not loaded
2025-01-25 04:02:43,405 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:43,405 - ERROR - Error checking URL: 
2025-01-25 04:02:44,287 - WARNING - URL model not loaded
2025-01-25 04:02:44,288 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:44,288 - ERROR - Error checking URL: 
2025-01-25 04:02:45,145 - WARNING - URL model not loaded
2025-01-25 04:02:45,145 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:45,145 - ERROR - Error checking URL: 
2025-01-25 04:02:46,023 - WARNING - URL model not loaded
2025-01-25 04:02:46,023 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:46,023 - ERROR - Error checking URL: 
2025-01-25 04:02:46,365 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:46,365 - ERROR - Error checking URL: 
2025-01-25 04:02:47,290 - WARNING - URL model not loaded
2025-01-25 04:02:47,291 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:47,291 - ERROR - Error checking URL: 
2025-01-25 04:02:48,166 - WARNING - URL model not loaded
2025-01-25 04:02:48,167 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:48,167 - ERROR - Error checking URL: 
2025-01-25 04:02:49,041 - WARNING - URL model not loaded
2025-01-25 04:02:49,041 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:49,041 - ERROR - Error checking URL: 
2025-01-25 04:02:50,027 - WARNING - URL model not loaded
2025-01-25 04:02:50,028 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:50,028 - ERROR - Error checking URL: 
2025-01-25 04:02:50,834 - WARNING - URL model not loaded
2025-01-25 04:02:50,835 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:50,835 - ERROR - Error checking URL: 
2025-01-25 04:02:51,618 - WARNING - URL model not loaded
2025-01-25 04:02:51,618 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:51,618 - ERROR - Error checking URL: 
2025-01-25 04:02:52,427 - WARNING - URL model not loaded
2025-01-25 04:02:52,427 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:52,428 - ERROR - Error checking URL: 
2025-01-25 04:02:53,240 - WARNING - URL model not loaded
2025-01-25 04:02:53,241 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:53,241 - ERROR - Error checking URL: 
2025-01-25 04:02:54,060 - WARNING - URL model not loaded
2025-01-25 04:02:54,061 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:54,061 - ERROR - Error checking URL: 
2025-01-25 04:02:54,874 - WARNING - URL model not loaded
2025-01-25 04:02:54,874 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:02:54,874 - ERROR - Error checking URL: 
2025-01-25 04:08:40,514 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:40,515 - ERROR - Error checking URL: 
2025-01-25 04:08:42,352 - WARNING - URL model not loaded
2025-01-25 04:08:42,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:42,353 - ERROR - Error checking URL: 
2025-01-25 04:08:42,355 - WARNING - URL model not loaded
2025-01-25 04:08:42,356 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:42,356 - ERROR - Error checking URL: 
2025-01-25 04:08:42,419 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:42,419 - ERROR - Error checking URL: 
2025-01-25 04:08:43,574 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:43,574 - ERROR - Error checking URL: 
2025-01-25 04:08:44,796 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:44,796 - ERROR - Error checking URL: 
2025-01-25 04:08:45,700 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:45,701 - ERROR - Error checking URL: 
2025-01-25 04:08:46,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:46,353 - ERROR - Error checking URL: 
2025-01-25 04:08:48,350 - WARNING - URL model not loaded
2025-01-25 04:08:48,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:48,350 - ERROR - Error checking URL: 
2025-01-25 04:08:48,353 - WARNING - URL model not loaded
2025-01-25 04:08:48,353 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:48,354 - ERROR - Error checking URL: 
2025-01-25 04:08:50,350 - WARNING - URL model not loaded
2025-01-25 04:08:50,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:50,350 - ERROR - Error checking URL: 
2025-01-25 04:08:50,352 - WARNING - URL model not loaded
2025-01-25 04:08:50,353 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:50,353 - ERROR - Error checking URL: 
2025-01-25 04:08:52,350 - WARNING - URL model not loaded
2025-01-25 04:08:52,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:52,350 - ERROR - Error checking URL: 
2025-01-25 04:08:52,353 - WARNING - URL model not loaded
2025-01-25 04:08:52,353 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:52,354 - ERROR - Error checking URL: 
2025-01-25 04:08:54,348 - WARNING - URL model not loaded
2025-01-25 04:08:54,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:54,348 - ERROR - Error checking URL: 
2025-01-25 04:08:54,349 - WARNING - URL model not loaded
2025-01-25 04:08:54,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:54,350 - ERROR - Error checking URL: 
2025-01-25 04:08:56,348 - WARNING - URL model not loaded
2025-01-25 04:08:56,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:56,348 - ERROR - Error checking URL: 
2025-01-25 04:08:56,349 - WARNING - URL model not loaded
2025-01-25 04:08:56,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:56,350 - ERROR - Error checking URL: 
2025-01-25 04:08:58,350 - WARNING - URL model not loaded
2025-01-25 04:08:58,350 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:58,351 - ERROR - Error checking URL: 
2025-01-25 04:08:58,354 - WARNING - URL model not loaded
2025-01-25 04:08:58,354 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:08:58,354 - ERROR - Error checking URL: 
2025-01-25 04:09:00,348 - WARNING - URL model not loaded
2025-01-25 04:09:00,348 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:09:00,349 - ERROR - Error checking URL: 
2025-01-25 04:09:00,351 - WARNING - URL model not loaded
2025-01-25 04:09:00,352 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:09:00,352 - ERROR - Error checking URL: 
2025-01-25 04:09:02,348 - WARNING - URL model not loaded
2025-01-25 04:09:02,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:09:02,349 - ERROR - Error checking URL: 
2025-01-25 04:09:02,351 - WARNING - URL model not loaded
2025-01-25 04:09:02,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:09:02,352 - ERROR - Error checking URL: 
2025-01-25 04:09:04,349 - WARNING - URL model not loaded
2025-01-25 04:09:04,349 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:09:04,349 - ERROR - Error checking URL: 
2025-01-25 04:09:04,350 - WARNING - URL model not loaded
2025-01-25 04:09:04,351 - ERROR - Error logging activity: The argument passed to Dialect.has_table() should be a <class 'sqlalchemy.engine.base.Connection'>, got <class 'sqlalchemy.engine.base.Engine'>. Additionally, the Dialect.has_table() method is for internal dialect use only; please use ``inspect(some_engine).has_table(<tablename>>)`` for public API use.
2025-01-25 04:09:04,351 - ERROR - Error checking URL: 
2025-01-25 04:10:46,380 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('7a3f8e38c99629142d92f2391122ea82', 'https://github.com/VishwamAI/VishwamAI/actions/runs/12958602396/job/36149327138', '2025-01-24 22:40:46.379298', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:48,351 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('843d23baf1f0a7563a72650f577381c4', 'http://localhost:3000/dashboard', '2025-01-24 22:40:48.351038', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:48,355 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('6206ae419937e75c7993138cc6080a46', 'http://localhost:3000/dashboard', '2025-01-24 22:40:48.354446', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:50,350 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('659cbb6baded3fbdfcfbdbb3c96b4349', 'http://localhost:3000/dashboard', '2025-01-24 22:40:50.349635', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:50,352 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('c60d5c3ff3e65029213316fa01b7360a', 'http://localhost:3000/dashboard', '2025-01-24 22:40:50.352063', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:50,649 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('8022db66fe4e6d8a801c0eef25089400', 'https://notebooklm.google.com/notebook/b54056f0-abaf-4f56-8851-179af7d47385', '2025-01-24 22:40:50.649007', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:52,350 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('03711e092280ac127a75843ad923e11f', 'http://localhost:3000/dashboard', '2025-01-24 22:40:52.349677', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:52,353 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('736fa75f9d0e2c302e77a23314d05643', 'http://localhost:3000/dashboard', '2025-01-24 22:40:52.353372', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:54,350 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('80758baf5e94adf893e91a2017191238', 'http://localhost:3000/dashboard', '2025-01-24 22:40:54.350036', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:54,353 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('816c3f9c7a8370755a3d591a94099196', 'http://localhost:3000/dashboard', '2025-01-24 22:40:54.352795', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:56,142 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('fc4e0425d4141d5e3ceda30ec7d8d6c0', 'https://notebooklm.google.com/notebook/b54056f0-abaf-4f56-8851-179af7d47385', '2025-01-24 22:40:56.142068', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:56,349 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('2f1dd6dbadaef5efa3467d792ed1b5d9', 'http://localhost:3000/dashboard', '2025-01-24 22:40:56.348965', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:56,352 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('8740fffe2e54a15e1ae516815485d0da', 'http://localhost:3000/dashboard', '2025-01-24 22:40:56.351666', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:10:56,805 - ERROR - Error checking URL: (sqlite3.OperationalError) no such table: activities
[SQL: INSERT INTO activities (id, url, timestamp, action, category, risk_level, ml_scores) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ('65b302406c848acbc2ac973773ded066', 'https://notebooklm.google.com/notebook/b54056f0-abaf-4f56-8851-179af7d47385', '2025-01-24 22:40:56.805097', 'allowed', 'Unknown', 'Unknown', '{}')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-01-25 04:12:13,183 - INFO - Database tables created successfully
2025-01-25 04:15:02,574 - INFO - Database tables created successfully
2025-01-25 04:17:18,730 - INFO - Database tables created successfully
2025-01-25 04:19:47,378 - INFO - Database tables created successfully
2025-01-25 04:22:19,197 - INFO - Database tables created successfully
2025-01-25 04:23:52,640 - INFO - Database tables created successfully
2025-01-25 04:25:47,903 - INFO - Database tables created successfully
2025-01-25 04:27:57,929 - INFO - Database tables created successfully
2025-01-25 04:32:36,431 - INFO - Database tables created successfully
2025-01-25 04:33:03,767 - INFO - Database tables created successfully
2025-01-25 04:33:36,768 - INFO - Database tables created successfully
2025-01-25 04:39:44,929 - INFO - Database tables created successfully
2025-01-25 04:43:34,935 - INFO - Database tables created successfully
